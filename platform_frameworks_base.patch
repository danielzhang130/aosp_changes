From b9e4bc2edad962f51da1ddae224ff4919e25d514 Mon Sep 17 00:00:00 2001
From: Daniel Zhang <danielzhang130@gmail.com>
Date: Fri, 18 Nov 2022 22:06:22 -0500
Subject: [PATCH 01/17] pass safetynet and gpay

Change-Id: I7d1c52a5937a4fef9bbec8ab5b94fe41a2554ae0
Signed-off-by: Daniel Zhang <danielzhang130@gmail.com>
---
 core/java/android/app/Instrumentation.java    |  4 +
 .../net/config/ManifestConfigSource.java      |  2 +-
 .../internal/gmscompat/AttestationHooks.java  | 86 +++++++++++++++++++
 .../keystore2/AndroidKeyStoreSpi.java         |  3 +
 4 files changed, 94 insertions(+), 1 deletion(-)
 create mode 100644 core/java/com/android/internal/gmscompat/AttestationHooks.java

diff --git a/core/java/android/app/Instrumentation.java b/core/java/android/app/Instrumentation.java
index 2162e3a7..af1c752b 100644
--- a/core/java/android/app/Instrumentation.java
+++ b/core/java/android/app/Instrumentation.java
@@ -62,6 +62,8 @@ import android.view.WindowManagerGlobal;
 
 import com.android.internal.content.ReferrerIntent;
 
+import com.android.internal.gmscompat.AttestationHooks;
+
 import java.io.File;
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
@@ -1344,6 +1346,7 @@ public class Instrumentation {
         Application app = getFactory(context.getPackageName())
                 .instantiateApplication(cl, className);
         app.attach(context);
+        AttestationHooks.initApplicationBeforeOnCreate(app);
         return app;
     }
     
@@ -1361,6 +1364,7 @@ public class Instrumentation {
             ClassNotFoundException {
         Application app = (Application)clazz.newInstance();
         app.attach(context);
+        AttestationHooks.initApplicationBeforeOnCreate(app);
         return app;
     }
 
diff --git a/core/java/android/security/net/config/ManifestConfigSource.java b/core/java/android/security/net/config/ManifestConfigSource.java
index 0e20997d..d84ea1af 100644
--- a/core/java/android/security/net/config/ManifestConfigSource.java
+++ b/core/java/android/security/net/config/ManifestConfigSource.java
@@ -57,7 +57,7 @@ public class ManifestConfigSource implements ConfigSource {
             }
             int configResource = mApplicationInfo.networkSecurityConfigRes;
             ConfigSource source;
-            if (configResource != 0) {
+            if (false) {
                 boolean debugBuild =
                         (mApplicationInfo.flags & ApplicationInfo.FLAG_DEBUGGABLE) != 0;
                 if (DBG) {
diff --git a/core/java/com/android/internal/gmscompat/AttestationHooks.java b/core/java/com/android/internal/gmscompat/AttestationHooks.java
new file mode 100644
index 00000000..77101541
--- /dev/null
+++ b/core/java/com/android/internal/gmscompat/AttestationHooks.java
@@ -0,0 +1,86 @@
+/*
+ * Copyright (C) 2021 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.internal.gmscompat;
+
+import android.app.Application;
+import android.os.Build;
+import android.os.SystemProperties;
+import android.util.Log;
+
+import java.lang.reflect.Field;
+import java.util.Arrays;
+
+/** @hide */
+/**
+ * Copied from ProtonAosp
+ */
+public final class AttestationHooks {
+    private static final String TAG = "GmsCompat/Attestation";
+
+    private static final String PROCESS_UNSTABLE = "com.google.android.gms.unstable";
+
+    private static final String PACKAGE_GMS_CORE = "com.google.android.gms";
+    private static final String PACKAGE_G_PAY = "com.google.android.apps.walletnfcrel";
+
+    private static volatile boolean sIsGms = false;
+
+    private AttestationHooks() { }
+
+    private static void setBuildField(Class clazz, String key, String value) {
+        try {
+            // Unlock
+            Field field = clazz.getDeclaredField(key);
+            field.setAccessible(true);
+
+            // Edit
+            field.set(null, value);
+
+            // Lock
+            field.setAccessible(false);
+        } catch (NoSuchFieldException | IllegalAccessException e) {
+            Log.e(TAG, "Failed to spoof Build." + key, e);
+        }
+    }
+
+    private static void spoofBuildGms() {
+        // Alter model name to avoid hardware attestation enforcement
+        setBuildField(Build.class, "MODEL", Build.MODEL + " ");
+        setBuildField(Build.class, "MANUFACTURER", "Google");
+    }
+
+    public static void initApplicationBeforeOnCreate(Application app) {
+        if ((PACKAGE_GMS_CORE.equals(app.getPackageName()) &&
+                PROCESS_UNSTABLE.equals(Application.getProcessName())) ||
+            PACKAGE_G_PAY.equals(app.getPackageName())){
+            sIsGms = true;
+            spoofBuildGms();
+        }
+    }
+
+    private static boolean isCallerSafetyNet() {
+        return Arrays.stream(Thread.currentThread().getStackTrace())
+                .anyMatch(elem -> elem.getClassName().contains("DroidGuard"));
+    }
+
+    public static void onEngineGetCertificateChain() {
+        // Check stack for SafetyNet
+        if (sIsGms && isCallerSafetyNet()) {
+            throw new UnsupportedOperationException();
+        }
+    }
+}
+
diff --git a/keystore/java/android/security/keystore2/AndroidKeyStoreSpi.java b/keystore/java/android/security/keystore2/AndroidKeyStoreSpi.java
index 2d8c5a38..caadbef6 100644
--- a/keystore/java/android/security/keystore2/AndroidKeyStoreSpi.java
+++ b/keystore/java/android/security/keystore2/AndroidKeyStoreSpi.java
@@ -48,6 +48,7 @@ import android.system.keystore2.ResponseCode;
 import android.util.Log;
 
 import com.android.internal.annotations.VisibleForTesting;
+import com.android.internal.gmscompat.AttestationHooks;
 
 import java.io.ByteArrayInputStream;
 import java.io.IOException;
@@ -178,6 +179,8 @@ public class AndroidKeyStoreSpi extends KeyStoreSpi {
 
     @Override
     public Certificate[] engineGetCertificateChain(String alias) {
+        AttestationHooks.onEngineGetCertificateChain();
+
         KeyEntryResponse response = getKeyMetadata(alias);
 
         if (response == null || response.metadata.certificate == null) {
-- 
2.34.1


From 2a645cb6e3222dad65092e32698aa357905ac857 Mon Sep 17 00:00:00 2001
From: Daniel Zhang <danielzhang130@gmail.com>
Date: Fri, 16 Dec 2022 11:31:41 -0500
Subject: [PATCH 02/17] Set auto brightness on by default

Signed-off-by: Daniel Zhang <danielzhang130@gmail.com>
---
 packages/SettingsProvider/res/values/defaults.xml | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/packages/SettingsProvider/res/values/defaults.xml b/packages/SettingsProvider/res/values/defaults.xml
index 89a8dd95..b0bc53f2 100644
--- a/packages/SettingsProvider/res/values/defaults.xml
+++ b/packages/SettingsProvider/res/values/defaults.xml
@@ -33,7 +33,7 @@
     <bool name="def_accelerometer_rotation">false</bool>
     <!-- Default screen brightness, from 0 to 255.  102 is 40%. -->
     <integer name="def_screen_brightness">102</integer>
-    <bool name="def_screen_brightness_automatic_mode">false</bool>
+    <bool name="def_screen_brightness_automatic_mode">true</bool>
     <fraction name="def_window_animation_scale">100%</fraction>
     <fraction name="def_window_transition_scale">100%</fraction>
     <bool name="def_haptic_feedback">true</bool>
-- 
2.34.1


From 009046c0d31a38f6ff3a6081216d85819a34600a Mon Sep 17 00:00:00 2001
From: Daniel Zhang <danielzhang130@gmail.com>
Date: Mon, 26 Dec 2022 15:07:10 -0500
Subject: [PATCH 03/17] Add support for left side volume dialog

Change-Id: Id40c67afa985834ed3f93858f411e3d4314215dd
Signed-off-by: Daniel Zhang <danielzhang130@gmail.com>
---
 .../res/layout-land/volume_dialog_left.xml    | 147 ++++++++++++++++++
 .../res/layout/volume_dialog_left.xml         | 145 +++++++++++++++++
 .../res/layout/volume_ringer_drawer_left.xml  | 133 ++++++++++++++++
 .../systemui/volume/VolumeDialogImpl.java     |  66 +++++---
 4 files changed, 466 insertions(+), 25 deletions(-)
 create mode 100644 packages/SystemUI/res/layout-land/volume_dialog_left.xml
 create mode 100644 packages/SystemUI/res/layout/volume_dialog_left.xml
 create mode 100644 packages/SystemUI/res/layout/volume_ringer_drawer_left.xml

diff --git a/packages/SystemUI/res/layout-land/volume_dialog_left.xml b/packages/SystemUI/res/layout-land/volume_dialog_left.xml
new file mode 100644
index 00000000..3d0c3614
--- /dev/null
+++ b/packages/SystemUI/res/layout-land/volume_dialog_left.xml
@@ -0,0 +1,147 @@
+<!--
+  ~ Copyright (C) 2019 The Android Open Source Project
+  ~
+  ~ Licensed under the Apache License, Version 2.0 (the "License");
+  ~ you may not use this file except in compliance with the License.
+  ~ You may obtain a copy of the License at
+  ~
+  ~      http://www.apache.org/licenses/LICENSE-2.0
+  ~
+  ~ Unless required by applicable law or agreed to in writing, software
+  ~ distributed under the License is distributed on an "AS IS" BASIS,
+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  ~ See the License for the specific language governing permissions and
+  ~ limitations under the License
+  -->
+<FrameLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:sysui="http://schemas.android.com/apk/res-auto"
+    xmlns:androidprv="http://schemas.android.com/apk/prv/res/android"
+    android:id="@+id/volume_dialog_container"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content"
+    android:gravity="left"
+    android:layout_gravity="left"
+    android:background="@android:color/transparent"
+    android:theme="@style/volume_dialog_theme">
+
+    <!-- right-aligned to be physically near volume button -->
+    <LinearLayout
+        android:id="@+id/volume_dialog"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:gravity="left"
+        android:layout_gravity="left"
+        android:layout_marginLeft="@dimen/volume_dialog_panel_transparent_padding_right"
+        android:orientation="vertical"
+        android:clipToPadding="false"
+        android:clipChildren="false">
+
+
+        <LinearLayout
+            android:id="@+id/volume_dialog_top_container"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:orientation="vertical"
+            android:clipChildren="false"
+            android:gravity="left">
+
+            <include layout="@layout/volume_ringer_drawer_left" />
+
+            <FrameLayout
+                android:visibility="gone"
+                android:id="@+id/ringer"
+                android:layout_width="@dimen/volume_dialog_ringer_size"
+                android:layout_height="@dimen/volume_dialog_ringer_size"
+                android:layout_marginBottom="@dimen/volume_dialog_spacer"
+                android:gravity="left"
+                android:layout_gravity="left"
+                android:translationZ="@dimen/volume_dialog_elevation"
+                android:clipToPadding="false"
+                android:background="@drawable/rounded_bg_full">
+                <com.android.keyguard.AlphaOptimizedImageButton
+                    android:id="@+id/ringer_icon"
+                    style="@style/VolumeButtons"
+                    android:background="@drawable/rounded_ripple"
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:scaleType="fitCenter"
+                    android:padding="@dimen/volume_dialog_ringer_icon_padding"
+                    android:tint="?android:attr/textColorPrimary"
+                    android:layout_gravity="center"
+                    android:soundEffectsEnabled="false" />
+
+            </FrameLayout>
+
+            <LinearLayout
+                android:id="@+id/volume_dialog_rows_container"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:gravity="left"
+                android:layout_gravity="left"
+                android:orientation="vertical"
+                android:clipChildren="false"
+                android:clipToPadding="false" >
+                <LinearLayout
+                    android:id="@+id/volume_dialog_rows"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:gravity="center"
+                    android:orientation="horizontal">
+                    <!-- volume rows added and removed here! :-) -->
+                </LinearLayout>
+                <FrameLayout
+                    android:id="@+id/settings_container"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:background="@drawable/volume_background_bottom"
+                    android:paddingLeft="@dimen/volume_dialog_ringer_rows_padding"
+                    android:paddingBottom="@dimen/volume_dialog_ringer_rows_padding"
+                    android:paddingRight="@dimen/volume_dialog_ringer_rows_padding">
+                    <com.android.keyguard.AlphaOptimizedImageButton
+                        android:id="@+id/settings"
+                        android:src="@drawable/horizontal_ellipsis"
+                        android:layout_width="@dimen/volume_dialog_tap_target_size"
+                        android:layout_height="@dimen/volume_dialog_tap_target_size"
+                        android:layout_gravity="center"
+                        android:contentDescription="@string/accessibility_volume_settings"
+                        android:background="@drawable/ripple_drawable_20dp"
+                        android:tint="?androidprv:attr/colorAccent"
+                        android:soundEffectsEnabled="false" />
+                </FrameLayout>
+            </LinearLayout>
+
+        </LinearLayout>
+
+        <FrameLayout
+            android:id="@+id/odi_captions"
+            android:layout_width="@dimen/volume_dialog_caption_size"
+            android:layout_height="@dimen/volume_dialog_caption_size"
+            android:layout_marginTop="@dimen/volume_dialog_row_margin_bottom"
+            android:gravity="left"
+            android:layout_gravity="left"
+            android:clipToPadding="false"
+            android:clipToOutline="true"
+            android:background="@drawable/volume_row_rounded_background">
+            <com.android.systemui.volume.CaptionsToggleImageButton
+                android:id="@+id/odi_captions_icon"
+                android:src="@drawable/ic_volume_odi_captions_disabled"
+                style="@style/VolumeButtons"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:tint="?android:attr/colorAccent"
+                android:layout_gravity="center"
+                android:soundEffectsEnabled="false" />
+        </FrameLayout>
+    </LinearLayout>
+
+    <ViewStub
+        android:id="@+id/odi_captions_tooltip_stub"
+        android:inflatedId="@+id/odi_captions_tooltip_view"
+        android:layout="@layout/volume_tool_tip_view"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="bottom | right"
+        android:layout_marginRight="@dimen/volume_tool_tip_right_margin"/>
+
+</FrameLayout>
diff --git a/packages/SystemUI/res/layout/volume_dialog_left.xml b/packages/SystemUI/res/layout/volume_dialog_left.xml
new file mode 100644
index 00000000..d6a01088
--- /dev/null
+++ b/packages/SystemUI/res/layout/volume_dialog_left.xml
@@ -0,0 +1,145 @@
+<!--
+     Copyright (C) 2015 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<FrameLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:sysui="http://schemas.android.com/apk/res-auto"
+    xmlns:androidprv="http://schemas.android.com/apk/prv/res/android"
+    android:id="@+id/volume_dialog_container"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content"
+    android:gravity="left"
+    android:layout_gravity="left"
+    android:clipToPadding="false"
+    android:theme="@style/volume_dialog_theme">
+
+    <!-- right-aligned to be physically near volume button -->
+    <LinearLayout
+        android:id="@+id/volume_dialog"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:gravity="left"
+        android:layout_gravity="left"
+        android:layout_marginLeft="@dimen/volume_dialog_panel_transparent_padding_right"
+        android:orientation="vertical"
+        android:clipToPadding="false"
+        android:clipChildren="false">
+
+        <LinearLayout
+            android:id="@+id/volume_dialog_top_container"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:clipChildren="false"
+            android:orientation="vertical"
+            android:gravity="left">
+
+            <include layout="@layout/volume_ringer_drawer_left" />
+
+            <FrameLayout
+                android:visibility="gone"
+                android:id="@+id/ringer"
+                android:layout_width="@dimen/volume_dialog_ringer_size"
+                android:layout_height="@dimen/volume_dialog_ringer_size"
+                android:layout_marginBottom="@dimen/volume_dialog_spacer"
+                android:gravity="left"
+                android:layout_gravity="left"
+                android:translationZ="@dimen/volume_dialog_elevation"
+                android:clipToPadding="false"
+                android:background="@drawable/rounded_bg_full">
+                <com.android.keyguard.AlphaOptimizedImageButton
+                    android:id="@+id/ringer_icon"
+                    style="@style/VolumeButtons"
+                    android:background="@drawable/rounded_ripple"
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:scaleType="fitCenter"
+                    android:padding="@dimen/volume_dialog_ringer_icon_padding"
+                    android:tint="?android:attr/textColorPrimary"
+                    android:layout_gravity="center"
+                    android:soundEffectsEnabled="false" />
+            </FrameLayout>
+
+            <LinearLayout
+                android:id="@+id/volume_dialog_rows_container"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:gravity="left"
+                android:layout_gravity="left"
+                android:orientation="vertical"
+                android:clipChildren="false"
+                android:clipToPadding="false" >
+                <LinearLayout
+                    android:id="@+id/volume_dialog_rows"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:gravity="center"
+                    android:orientation="horizontal">
+                        <!-- volume rows added and removed here! :-) -->
+                </LinearLayout>
+                <FrameLayout
+                    android:id="@+id/settings_container"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:background="@drawable/volume_background_bottom"
+                    android:paddingLeft="@dimen/volume_dialog_ringer_rows_padding"
+                    android:paddingBottom="@dimen/volume_dialog_ringer_rows_padding"
+                    android:paddingRight="@dimen/volume_dialog_ringer_rows_padding">
+                    <com.android.keyguard.AlphaOptimizedImageButton
+                        android:id="@+id/settings"
+                        android:src="@drawable/horizontal_ellipsis"
+                        android:layout_width="@dimen/volume_dialog_tap_target_size"
+                        android:layout_height="@dimen/volume_dialog_tap_target_size"
+                        android:layout_gravity="center"
+                        android:contentDescription="@string/accessibility_volume_settings"
+                        android:background="@drawable/ripple_drawable_20dp"
+                        android:tint="?androidprv:attr/colorAccent"
+                        android:soundEffectsEnabled="false" />
+                </FrameLayout>
+            </LinearLayout>
+
+        </LinearLayout>
+
+        <FrameLayout
+            android:id="@+id/odi_captions"
+            android:layout_width="@dimen/volume_dialog_caption_size"
+            android:layout_height="@dimen/volume_dialog_caption_size"
+            android:layout_marginTop="@dimen/volume_dialog_row_margin_bottom"
+            android:gravity="left"
+            android:layout_gravity="left"
+            android:clipToPadding="false"
+            android:clipToOutline="true"
+            android:background="@drawable/volume_row_rounded_background">
+            <com.android.systemui.volume.CaptionsToggleImageButton
+                android:id="@+id/odi_captions_icon"
+                android:src="@drawable/ic_volume_odi_captions_disabled"
+                style="@style/VolumeButtons"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:tint="?android:attr/colorAccent"
+                android:layout_gravity="center"
+                android:soundEffectsEnabled="false"/>
+        </FrameLayout>
+    </LinearLayout>
+
+    <ViewStub
+        android:id="@+id/odi_captions_tooltip_stub"
+        android:inflatedId="@+id/odi_captions_tooltip_view"
+        android:layout="@layout/volume_tool_tip_view"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="bottom | left"
+        android:layout_marginLeft="@dimen/volume_tool_tip_right_margin"/>
+
+</FrameLayout>
diff --git a/packages/SystemUI/res/layout/volume_ringer_drawer_left.xml b/packages/SystemUI/res/layout/volume_ringer_drawer_left.xml
new file mode 100644
index 00000000..8025a780
--- /dev/null
+++ b/packages/SystemUI/res/layout/volume_ringer_drawer_left.xml
@@ -0,0 +1,133 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2021 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<!-- Contains the active ringer icon and a hidden drawer containing all three ringer options. -->
+<FrameLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/volume_ringer_and_drawer_container"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content"
+    android:gravity="center"
+    android:paddingLeft="@dimen/volume_dialog_ringer_rows_padding"
+    android:paddingTop="@dimen/volume_dialog_ringer_rows_padding"
+    android:paddingRight="@dimen/volume_dialog_ringer_rows_padding"
+    android:paddingBottom="@dimen/volume_dialog_ringer_rows_padding"
+    android:background="@drawable/volume_background_top"
+    android:layoutDirection="ltr"
+    android:clipToPadding="false"
+    android:clipChildren="false">
+
+    <!-- Drawer view, invisible by default. -->
+    <FrameLayout
+        android:id="@+id/volume_drawer_container"
+        android:alpha="0.0"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:background="@drawable/volume_drawer_bg"
+        android:orientation="vertical">
+
+        <!-- View that is animated to a tapped ringer selection, so it appears selected. -->
+        <FrameLayout
+            android:id="@+id/volume_drawer_selection_background"
+            android:alpha="0.0"
+            android:layout_width="@dimen/volume_ringer_drawer_item_size"
+            android:layout_height="@dimen/volume_ringer_drawer_item_size"
+            android:layout_gravity="bottom|left"
+            android:background="@drawable/volume_drawer_selection_bg" />
+
+        <LinearLayout
+            android:id="@+id/volume_drawer_options"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical">
+
+            <FrameLayout
+                android:id="@+id/volume_drawer_vibrate"
+                android:layout_width="@dimen/volume_ringer_drawer_item_size"
+                android:layout_height="@dimen/volume_ringer_drawer_item_size"
+                android:contentDescription="@string/volume_ringer_hint_vibrate"
+                android:gravity="center">
+
+                <ImageView
+                    android:id="@+id/volume_drawer_vibrate_icon"
+                    android:layout_width="@dimen/volume_ringer_drawer_icon_size"
+                    android:layout_height="@dimen/volume_ringer_drawer_icon_size"
+                    android:layout_gravity="center"
+                    android:tint="?android:attr/textColorPrimary"
+                    android:src="@drawable/ic_volume_ringer_vibrate" />
+
+            </FrameLayout>
+
+            <FrameLayout
+                android:id="@+id/volume_drawer_mute"
+                android:layout_width="@dimen/volume_ringer_drawer_item_size"
+                android:layout_height="@dimen/volume_ringer_drawer_item_size"
+                android:contentDescription="@string/volume_ringer_hint_mute"
+                android:gravity="center">
+
+                <ImageView
+                    android:id="@+id/volume_drawer_mute_icon"
+                    android:layout_width="@dimen/volume_ringer_drawer_icon_size"
+                    android:layout_height="@dimen/volume_ringer_drawer_icon_size"
+                    android:layout_gravity="center"
+                    android:tint="?android:attr/textColorPrimary"
+                    android:src="@drawable/ic_volume_ringer_mute" />
+
+            </FrameLayout>
+
+            <FrameLayout
+                android:id="@+id/volume_drawer_normal"
+                android:layout_width="@dimen/volume_ringer_drawer_item_size"
+                android:layout_height="@dimen/volume_ringer_drawer_item_size"
+                android:contentDescription="@string/volume_ringer_hint_unmute"
+                android:gravity="center">
+
+                <ImageView
+                    android:id="@+id/volume_drawer_normal_icon"
+                    android:layout_width="@dimen/volume_ringer_drawer_icon_size"
+                    android:layout_height="@dimen/volume_ringer_drawer_icon_size"
+                    android:layout_gravity="center"
+                    android:tint="?android:attr/textColorPrimary"
+                    android:src="@drawable/ic_volume_ringer" />
+
+            </FrameLayout>
+
+        </LinearLayout>
+
+    </FrameLayout>
+
+    <!-- The current ringer selection. When the drawer is opened, this animates to the corresponding
+         position in the drawer. When the drawer is closed, it animates back. -->
+    <FrameLayout
+        android:id="@+id/volume_new_ringer_active_icon_container"
+        android:layout_width="@dimen/volume_ringer_drawer_item_size"
+        android:layout_height="@dimen/volume_ringer_drawer_item_size"
+        android:layout_gravity="bottom|left"
+        android:contentDescription="@string/volume_ringer_change"
+        android:background="@drawable/volume_drawer_selection_bg">
+
+        <ImageView
+            android:id="@+id/volume_new_ringer_active_icon"
+            android:layout_width="@dimen/volume_ringer_drawer_icon_size"
+            android:layout_height="@dimen/volume_ringer_drawer_icon_size"
+            android:layout_gravity="center"
+            android:tint="?android:attr/textColorPrimaryInverse"
+            android:src="@drawable/ic_volume_media" />
+
+    </FrameLayout>
+
+</FrameLayout>
diff --git a/packages/SystemUI/src/com/android/systemui/volume/VolumeDialogImpl.java b/packages/SystemUI/src/com/android/systemui/volume/VolumeDialogImpl.java
index 404621d1..b2724987 100644
--- a/packages/SystemUI/src/com/android/systemui/volume/VolumeDialogImpl.java
+++ b/packages/SystemUI/src/com/android/systemui/volume/VolumeDialogImpl.java
@@ -180,6 +180,7 @@ public class VolumeDialogImpl implements VolumeDialog, Dumpable,
     private final int mDialogShowAnimationDurationMs;
     private final int mDialogHideAnimationDurationMs;
     private int mDialogWidth;
+    private int mDialogGravity;
     private int mDialogCornerRadius;
     private int mRingerDrawerItemSize;
     private int mRingerRowsPadding;
@@ -296,7 +297,6 @@ public class VolumeDialogImpl implements VolumeDialog, Dumpable,
     @VisibleForTesting
     final int mVolumeRingerMuteIconDrawableId = R.drawable.ic_speaker_mute;
 
-    private int mOriginalGravity;
     private final DevicePostureController.Callback mDevicePostureControllerCallback;
     private final DevicePostureController mDevicePostureController;
     private @DevicePostureController.DevicePostureInt int mDevicePosture;
@@ -388,10 +388,7 @@ public class VolumeDialogImpl implements VolumeDialog, Dumpable,
                 mDevicePosture == DevicePostureController.DEVICE_POSTURE_HALF_OPENED;
         final boolean isTabletop = isPortrait && isHalfOpen;
         WindowManager.LayoutParams lp =  mWindow.getAttributes();
-        int gravity = isTabletop ? (mOriginalGravity | Gravity.TOP) : mOriginalGravity;
-        mWindowGravity = Gravity.getAbsoluteGravity(gravity,
-                mContext.getResources().getConfiguration().getLayoutDirection());
-        lp.gravity = mWindowGravity;
+        lp.gravity = mDialogGravity;
     }
 
     @VisibleForTesting int getWindowGravity() {
@@ -458,6 +455,7 @@ public class VolumeDialogImpl implements VolumeDialog, Dumpable,
 
         float x = locInWindow[0];
         float y = locInWindow[1];
+        boolean expandRight = false;
 
         // The ringer and rows container has extra height at the top to fit the expanded ringer
         // drawer. This area should not be touchable unless the ringer drawer is open.
@@ -466,15 +464,17 @@ public class VolumeDialogImpl implements VolumeDialog, Dumpable,
         if (view == mTopContainer && !mIsRingerDrawerOpen) {
             if (!isLandscape()) {
                 y += getRingerDrawerOpenExtraSize();
-            } else if (getRingerDrawerOpenExtraSize() > getVisibleRowsExtraSize()) {
+            } else if ((mDialogGravity & Gravity.LEFT) != Gravity.LEFT && getRingerDrawerOpenExtraSize() > getVisibleRowsExtraSize()) {
                 x += (getRingerDrawerOpenExtraSize() - getVisibleRowsExtraSize());
+            } else {
+                expandRight = true;
             }
         }
 
         mTouchableRegion.op(
                 (int) x,
                 (int) y,
-                locInWindow[0] + view.getWidth(),
+                locInWindow[0] + view.getWidth() + (expandRight ? getRingerDrawerOpenExtraSize() : 0),
                 locInWindow[1] + view.getHeight(),
                 Region.Op.UNION);
     }
@@ -504,15 +504,12 @@ public class VolumeDialogImpl implements VolumeDialog, Dumpable,
         lp.format = PixelFormat.TRANSLUCENT;
         lp.setTitle(VolumeDialogImpl.class.getSimpleName());
         lp.windowAnimations = -1;
-
-        mOriginalGravity = mContext.getResources().getInteger(R.integer.volume_dialog_gravity);
-        mWindowGravity = Gravity.getAbsoluteGravity(mOriginalGravity,
-                mContext.getResources().getConfiguration().getLayoutDirection());
-        lp.gravity = mWindowGravity;
+        lp.gravity = mDialogGravity;
 
         mWindow.setAttributes(lp);
         mWindow.setLayout(WRAP_CONTENT, WRAP_CONTENT);
-        mDialog.setContentView(R.layout.volume_dialog);
+        mDialog.setContentView((mDialogGravity & Gravity.LEFT) != Gravity.LEFT ?
+                R.layout.volume_dialog : R.layout.volume_dialog_left);
         mDialogView = mDialog.findViewById(R.id.volume_dialog);
         mDialogView.setAlpha(0);
         mDialogTimeoutMillis = mSecureSettings.get().getInt(
@@ -696,7 +693,7 @@ public class VolumeDialogImpl implements VolumeDialog, Dumpable,
     }
 
     private boolean isWindowGravityLeft() {
-        return (mWindowGravity & Gravity.LEFT) == Gravity.LEFT;
+        return (mDialogGravity & Gravity.LEFT) == Gravity.LEFT;
     }
 
     private void initDimens() {
@@ -712,6 +709,7 @@ public class VolumeDialogImpl implements VolumeDialog, Dumpable,
 
         // Normal, mute, and possibly vibrate.
         mRingerCount = mShowVibrate ? 3 : 2;
+        mDialogGravity = mContext.getResources().getInteger(R.integer.volume_dialog_gravity);
     }
 
     protected ViewGroup getDialogView() {
@@ -927,7 +925,7 @@ public class VolumeDialogImpl implements VolumeDialog, Dumpable,
                     mDialogView.getPaddingTop(),
                     mDialogView.getPaddingRight(),
                     mDialogView.getPaddingBottom() + getRingerDrawerOpenExtraSize());
-        } else {
+        } else if ((mDialogGravity & Gravity.LEFT) != Gravity.LEFT) {
             mDialogView.setPadding(
                     mDialogView.getPaddingLeft() + getRingerDrawerOpenExtraSize(),
                     mDialogView.getPaddingTop(),
@@ -1001,11 +999,19 @@ public class VolumeDialogImpl implements VolumeDialog, Dumpable,
      * with the given mode in the drawer.
      */
     private float getTranslationInDrawerForRingerMode(int mode) {
-        return mode == RINGER_MODE_VIBRATE
-                ? -mRingerDrawerItemSize * 2
-                : mode == RINGER_MODE_SILENT
-                        ? -mRingerDrawerItemSize
-                        : 0;
+        if (isLandscape() && (mDialogGravity & Gravity.LEFT) == Gravity.LEFT) {
+            return mode == RINGER_MODE_VIBRATE
+                    ? 0
+                    : mode == RINGER_MODE_SILENT
+                            ? mRingerDrawerItemSize
+                            : mRingerDrawerItemSize * 2;
+        } else {
+            return mode == RINGER_MODE_VIBRATE
+                    ? -mRingerDrawerItemSize * 2
+                    : mode == RINGER_MODE_SILENT
+                            ? -mRingerDrawerItemSize
+                            : 0;
+        }
     }
 
     @VisibleForTesting String getSelectedRingerContainerDescription() {
@@ -1053,8 +1059,10 @@ public class VolumeDialogImpl implements VolumeDialog, Dumpable,
         // icon.
         if (!isLandscape()) {
             mRingerDrawerContainer.setTranslationY(mRingerDrawerItemSize * (mRingerCount - 1));
-        } else {
+        } else if ((mDialogGravity & Gravity.LEFT) != Gravity.LEFT) {
             mRingerDrawerContainer.setTranslationX(mRingerDrawerItemSize * (mRingerCount - 1));
+        } else {
+            mRingerDrawerContainer.setTranslationX(-mRingerDrawerItemSize * (mRingerCount - 1));
         }
         mRingerDrawerContainer.setAlpha(0f);
         mRingerDrawerContainer.setVisibility(VISIBLE);
@@ -1129,10 +1137,14 @@ public class VolumeDialogImpl implements VolumeDialog, Dumpable,
             mRingerDrawerContainer.animate()
                     .translationY(mRingerDrawerItemSize * 2)
                     .start();
-        } else {
+        } else if ((mDialogGravity & Gravity.LEFT) != Gravity.LEFT) {
             mRingerDrawerContainer.animate()
                     .translationX(mRingerDrawerItemSize * 2)
                     .start();
+        } else {
+            mRingerDrawerContainer.animate()
+                    .translationX(-mRingerDrawerItemSize * 2)
+                    .start();
         }
 
         mAnimateUpBackgroundToMatchDrawer.setDuration(DRAWER_ANIMATION_DURATION);
@@ -1685,7 +1697,7 @@ public class VolumeDialogImpl implements VolumeDialog, Dumpable,
             }
         }
 
-        if (rightmostVisibleRowIndex > -1 && rightmostVisibleRowIndex < Short.MAX_VALUE) {
+        if ((mDialogGravity & Gravity.LEFT) != Gravity.LEFT && rightmostVisibleRowIndex > -1 && rightmostVisibleRowIndex < Short.MAX_VALUE) {
             final View lastVisibleChild = mDialogRowsView.getChildAt(rightmostVisibleRowIndex);
             final ViewGroup.LayoutParams layoutParams = lastVisibleChild.getLayoutParams();
             // Remove the spacing on the last row, and remove its background since the container is
@@ -2213,8 +2225,11 @@ public class VolumeDialogImpl implements VolumeDialog, Dumpable,
         final Rect bounds = mRingerAndDrawerContainerBackground.copyBounds();
         if (!isLandscape()) {
             bounds.top = (int) (mRingerDrawerClosedAmount * getRingerDrawerOpenExtraSize());
-        } else {
+        } else if ((mDialogGravity & Gravity.LEFT) != Gravity.LEFT) {
             bounds.left = (int) (mRingerDrawerClosedAmount * getRingerDrawerOpenExtraSize());
+        } else {
+            int tmp = (int) (mRingerDrawerClosedAmount * getRingerDrawerOpenExtraSize());
+            bounds.right = mRingerAndDrawerContainer.getWidth() - tmp;
         }
         mRingerAndDrawerContainerBackground.setBounds(bounds);
     }
@@ -2255,7 +2270,8 @@ public class VolumeDialogImpl implements VolumeDialog, Dumpable,
                         : mDialogRowsViewContainer.getTop() - mDialogCornerRadius);
 
         // Set gravity to top-right, since additional rows will be added on the left.
-        background.setLayerGravity(0, Gravity.TOP | Gravity.RIGHT);
+        int gravity = (mDialogGravity & Gravity.LEFT) == Gravity.LEFT ? Gravity.LEFT : Gravity.RIGHT;
+        background.setLayerGravity(0, Gravity.TOP | gravity);
 
         // In landscape, the ringer drawer animates out to the left (instead of down). Since the
         // drawer comes from the right (beyond the bounds of the dialog), we should clip it so it
-- 
2.34.1


From 59aa6b8dff7b32038579de18db8cb99d2105eb42 Mon Sep 17 00:00:00 2001
From: Daniel Zhang <danielzhang130@gmail.com>
Date: Wed, 28 Dec 2022 21:02:38 -0500
Subject: [PATCH 04/17] Remove max column limit on quick tiles under
 notification shade

Change-Id: I7db5cf5e69b3726488aacad5e624d429dc70f891
Signed-off-by: Daniel Zhang <danielzhang130@gmail.com>
---
 packages/SystemUI/src/com/android/systemui/qs/TileLayout.java | 1 -
 1 file changed, 1 deletion(-)

diff --git a/packages/SystemUI/src/com/android/systemui/qs/TileLayout.java b/packages/SystemUI/src/com/android/systemui/qs/TileLayout.java
index 9d4eba5a..a3606b84 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/TileLayout.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/TileLayout.java
@@ -99,7 +99,6 @@ public class TileLayout extends ViewGroup implements QSTileLayout {
 
     @Override
     public boolean setMaxColumns(int maxColumns) {
-        mMaxColumns = maxColumns;
         return updateColumns();
     }
 
-- 
2.34.1


From b5df85683d24e5a7b650e7c2b1cfc2d635273f50 Mon Sep 17 00:00:00 2001
From: Daniel Zhang <danielzhang130@gmail.com>
Date: Wed, 8 Feb 2023 17:39:55 -0500
Subject: [PATCH 05/17] Update permission history cutoff days

Change-Id: I0c61451d766a9870b543c73a661abc39c5eb6bf3
Signed-off-by: Daniel Zhang <danielzhang130@gmail.com>
---
 .../com/android/server/appop/DiscreteRegistry.java  | 13 ++++---------
 1 file changed, 4 insertions(+), 9 deletions(-)

diff --git a/services/core/java/com/android/server/appop/DiscreteRegistry.java b/services/core/java/com/android/server/appop/DiscreteRegistry.java
index b1a12f73..da48f884 100644
--- a/services/core/java/com/android/server/appop/DiscreteRegistry.java
+++ b/services/core/java/com/android/server/appop/DiscreteRegistry.java
@@ -216,15 +216,10 @@ final class DiscreteRegistry {
     }
 
     private void setDiscreteHistoryParameters(DeviceConfig.Properties p) {
-        if (p.getKeyset().contains(PROPERTY_DISCRETE_HISTORY_CUTOFF)) {
-            sDiscreteHistoryCutoff = p.getLong(PROPERTY_DISCRETE_HISTORY_CUTOFF,
-                    DEFAULT_DISCRETE_HISTORY_CUTOFF);
-            if (!Build.IS_DEBUGGABLE && !mDebugMode) {
-                sDiscreteHistoryCutoff = min(MAXIMUM_DISCRETE_HISTORY_CUTOFF,
-                        sDiscreteHistoryCutoff);
-            }
-        } else {
-            sDiscreteHistoryCutoff = DEFAULT_DISCRETE_HISTORY_CUTOFF;
+        sDiscreteHistoryCutoff = DEFAULT_DISCRETE_HISTORY_CUTOFF;
+        if (!Build.IS_DEBUGGABLE && !mDebugMode) {
+            sDiscreteHistoryCutoff = min(MAXIMUM_DISCRETE_HISTORY_CUTOFF,
+                    sDiscreteHistoryCutoff);
         }
         if (p.getKeyset().contains(PROPERTY_DISCRETE_HISTORY_QUANTIZATION)) {
             sDiscreteHistoryQuantization = p.getLong(PROPERTY_DISCRETE_HISTORY_QUANTIZATION,
-- 
2.34.1


From 55184025aaba6e245f7b71e3b1cd9b4f7ea42f9e Mon Sep 17 00:00:00 2001
From: Daniel Zhang <danielzhang130@gmail.com>
Date: Sun, 12 Feb 2023 14:40:38 -0500
Subject: [PATCH 06/17] Add launcher icon for android 10 easter egg

Change-Id: I8b0086884f81ef02a7424387397b0d2e62200879
Signed-off-by: Daniel Zhang <danielzhang130@gmail.com>
---
 packages/EasterEgg/AndroidManifest.xml | 1 +
 1 file changed, 1 insertion(+)

diff --git a/packages/EasterEgg/AndroidManifest.xml b/packages/EasterEgg/AndroidManifest.xml
index d1db2379..f6b4877b 100644
--- a/packages/EasterEgg/AndroidManifest.xml
+++ b/packages/EasterEgg/AndroidManifest.xml
@@ -62,6 +62,7 @@
             android:theme="@style/QuaresTheme">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
+                <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
         <activity
-- 
2.34.1


From ee0dd591b90c72dc4aeb7ffd76415c8309689f1a Mon Sep 17 00:00:00 2001
From: Daniel Zhang <danielzhang130@gmail.com>
Date: Wed, 10 May 2023 20:51:43 -0400
Subject: [PATCH 07/17] Use system default vibration for fb messenger app

Change-Id: I0fbada600b8a5c274136be38a4a4c75f4cd87fa6
Signed-off-by: Daniel Zhang <danielzhang130@gmail.com>
---
 core/java/android/app/NotificationChannel.java | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/core/java/android/app/NotificationChannel.java b/core/java/android/app/NotificationChannel.java
index 15d692ab..8ec63c58 100644
--- a/core/java/android/app/NotificationChannel.java
+++ b/core/java/android/app/NotificationChannel.java
@@ -594,6 +594,9 @@ public final class NotificationChannel implements Parcelable {
      * {@link NotificationManager#createNotificationChannel(NotificationChannel)}.
      */
     public void setVibrationPattern(long[] vibrationPattern) {
+        if (mId.startsWith("messenger_orca_") && vibrationPattern != null && vibrationPattern.length == 2) {
+            return;
+        }
         this.mVibrationEnabled = vibrationPattern != null && vibrationPattern.length > 0;
         this.mVibration = vibrationPattern;
     }
-- 
2.34.1


From 574edcb306d705fb25f444eb818cac334af6ca20 Mon Sep 17 00:00:00 2001
From: Daniel Zhang <danielzhang130@gmail.com>
Date: Mon, 26 Jun 2023 08:04:28 -0400
Subject: [PATCH 08/17] Fix safetynet/play integrity

Change-Id: I57d34bb4c6c6e1b22fae4aa42e4842c7d4ee40aa
Signed-off-by: Daniel Zhang <danielzhang130@gmail.com>
---
 .../com/android/internal/gmscompat/AttestationHooks.java   | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/core/java/com/android/internal/gmscompat/AttestationHooks.java b/core/java/com/android/internal/gmscompat/AttestationHooks.java
index 77101541..84d76769 100644
--- a/core/java/com/android/internal/gmscompat/AttestationHooks.java
+++ b/core/java/com/android/internal/gmscompat/AttestationHooks.java
@@ -57,9 +57,10 @@ public final class AttestationHooks {
     }
 
     private static void spoofBuildGms() {
-        // Alter model name to avoid hardware attestation enforcement
-        setBuildField(Build.class, "MODEL", Build.MODEL + " ");
-        setBuildField(Build.class, "MANUFACTURER", "Google");
+        setBuildField(Build.class, "PRODUCT", "marlin");
+        setBuildField(Build.class, "DEVICE", "marlin");
+        setBuildField(Build.class, "MODEL", "Pixel XL");
+        setBuildField(Build.class, "FINGERPRINT", "google/marlin/marlin:7.1.2/NJH47F/4146041:user/release-keys");
     }
 
     public static void initApplicationBeforeOnCreate(Application app) {
-- 
2.34.1


From f4eb791a7c508f6f3dd9f2e52cbfd401f3b27f75 Mon Sep 17 00:00:00 2001
From: Daniel Zhang <danielzhang130@gmail.com>
Date: Thu, 6 Jul 2023 15:55:19 -0400
Subject: [PATCH 09/17] Get free photo storage for google pixel

Change-Id: I9843cdfd745e690f393417dfbbccf8e19b9a6d30
Signed-off-by: Daniel Zhang <danielzhang130@gmail.com>
---
 core/java/android/app/Application.java | 25 +++++++++++++++++++++++++
 1 file changed, 25 insertions(+)

diff --git a/core/java/android/app/Application.java b/core/java/android/app/Application.java
index 6a50e74c..5051499a 100644
--- a/core/java/android/app/Application.java
+++ b/core/java/android/app/Application.java
@@ -32,6 +32,7 @@ import android.os.Bundle;
 import android.util.Log;
 import android.view.autofill.AutofillManager;
 
+import java.lang.reflect.Field;
 import java.util.ArrayList;
 
 /**
@@ -262,8 +263,32 @@ public class Application extends ContextWrapper implements ComponentCallbacks2 {
      */
     @CallSuper
     public void onCreate() {
+        if ((PACKAGE_G_PHOTO.equals(getPackageName()))) {
+            setBuildField(Build.class, "PRODUCT", "marlin");
+            setBuildField(Build.class, "DEVICE", "marlin");
+            setBuildField(Build.class, "MODEL", "Pixel XL");
+            setBuildField(Build.class, "MANUFACTURER", "Google");
+        }
     }
 
+    private void setBuildField(Class clazz, String key, String value) {
+        try {
+            // Unlock
+            Field field = clazz.getDeclaredField(key);
+            field.setAccessible(true);
+
+            // Edit
+            field.set(null, value);
+
+            // Lock
+            field.setAccessible(false);
+        } catch (NoSuchFieldException | IllegalAccessException e) {
+            Log.e(TAG, "Failed to spoof Build." + key, e);
+        }
+    }
+
+    private static final String PACKAGE_G_PHOTO = "com.google.android.apps.photos";
+
     /**
      * This method is for use in emulated process environments.  It will
      * never be called on a production Android device, where processes are
-- 
2.34.1


From d7af4db7321550950029c02d26134375379f8e70 Mon Sep 17 00:00:00 2001
From: Daniel Zhang <danielzhang130@gmail.com>
Date: Fri, 24 Nov 2023 13:16:36 -0500
Subject: [PATCH 10/17] Add ability to change fingerprint from persist prop

Change-Id: I80a0a55952333bc2bd46ffc4ed516e76aed4efad
Signed-off-by: Daniel Zhang <danielzhang130@gmail.com>
---
 .../internal/gmscompat/AttestationHooks.java     | 16 ++++++++++++----
 1 file changed, 12 insertions(+), 4 deletions(-)

diff --git a/core/java/com/android/internal/gmscompat/AttestationHooks.java b/core/java/com/android/internal/gmscompat/AttestationHooks.java
index 84d76769..3a928f54 100644
--- a/core/java/com/android/internal/gmscompat/AttestationHooks.java
+++ b/core/java/com/android/internal/gmscompat/AttestationHooks.java
@@ -57,10 +57,18 @@ public final class AttestationHooks {
     }
 
     private static void spoofBuildGms() {
-        setBuildField(Build.class, "PRODUCT", "marlin");
-        setBuildField(Build.class, "DEVICE", "marlin");
-        setBuildField(Build.class, "MODEL", "Pixel XL");
-        setBuildField(Build.class, "FINGERPRINT", "google/marlin/marlin:7.1.2/NJH47F/4146041:user/release-keys");
+        setBuildField(Build.class, "PRODUCT", 
+                SystemProperties.get("persist.product", "WW_Phone"));
+        setBuildField(Build.class, "DEVICE",
+                SystemProperties.get("persist.device", "ASUS_X00HD_4"));
+        setBuildField(Build.class, "MANUFACTURER",
+                SystemProperties.get("persist.manufacturer", "Asus"));
+        setBuildField(Build.class, "BRAND",
+                SystemProperties.get("persist.brand", "Asus"));
+        setBuildField(Build.class, "MODEL",
+                SystemProperties.get("persist.model", "ASUS_X00HD"));
+        setBuildField(Build.class, "FINGERPRINT",
+                SystemProperties.get("persist.fingerprint", "asus/WW_Phone/ASUS_X00HD_4:7.1.1/NMF26F/14.2016.1801.372-20180119:user/release-keys"));
     }
 
     public static void initApplicationBeforeOnCreate(Application app) {
-- 
2.34.1


From fddd5e0104ac3cbfabffab382956f6af2df025aa Mon Sep 17 00:00:00 2001
From: Daniel Zhang <danielzhang130@gmail.com>
Date: Mon, 4 Dec 2023 13:50:00 -0500
Subject: [PATCH 11/17] Update default spoof fingerprint

Change-Id: Ica6f809a85f9b1238fca22edb1dd8ad48601411d
Signed-off-by: Daniel Zhang <danielzhang130@gmail.com>
---
 .../android/internal/gmscompat/AttestationHooks.java | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/core/java/com/android/internal/gmscompat/AttestationHooks.java b/core/java/com/android/internal/gmscompat/AttestationHooks.java
index 3a928f54..ee174dfb 100644
--- a/core/java/com/android/internal/gmscompat/AttestationHooks.java
+++ b/core/java/com/android/internal/gmscompat/AttestationHooks.java
@@ -58,17 +58,17 @@ public final class AttestationHooks {
 
     private static void spoofBuildGms() {
         setBuildField(Build.class, "PRODUCT", 
-                SystemProperties.get("persist.product", "WW_Phone"));
+                SystemProperties.get("persist.product", "bullhead"));
         setBuildField(Build.class, "DEVICE",
-                SystemProperties.get("persist.device", "ASUS_X00HD_4"));
+                SystemProperties.get("persist.device", "bullhead"));
         setBuildField(Build.class, "MANUFACTURER",
-                SystemProperties.get("persist.manufacturer", "Asus"));
+                SystemProperties.get("persist.manufacturer", "LGE"));
         setBuildField(Build.class, "BRAND",
-                SystemProperties.get("persist.brand", "Asus"));
+                SystemProperties.get("persist.brand", "google"));
         setBuildField(Build.class, "MODEL",
-                SystemProperties.get("persist.model", "ASUS_X00HD"));
+                SystemProperties.get("persist.model", "Nexus 5X"));
         setBuildField(Build.class, "FINGERPRINT",
-                SystemProperties.get("persist.fingerprint", "asus/WW_Phone/ASUS_X00HD_4:7.1.1/NMF26F/14.2016.1801.372-20180119:user/release-keys"));
+                SystemProperties.get("persist.fingerprint", "google/bullhead/bullhead:6.0.1/MHC19Q/2705526:user/release-keys"));
     }
 
     public static void initApplicationBeforeOnCreate(Application app) {
-- 
2.34.1


From ea00b5c2bb8d90424b54845788145dd5a0ee28f5 Mon Sep 17 00:00:00 2001
From: Daniel Zhang <danielzhang130@gmail.com>
Date: Mon, 4 Dec 2023 13:56:49 -0500
Subject: [PATCH 12/17] Change quick affordance click from long to short click

Change-Id: I700b9e1cb0fcee64af849151891285b3e9b0307f
Signed-off-by: Daniel Zhang <danielzhang130@gmail.com>
---
 .../domain/interactor/KeyguardQuickAffordanceInteractor.kt      | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/packages/SystemUI/src/com/android/systemui/keyguard/domain/interactor/KeyguardQuickAffordanceInteractor.kt b/packages/SystemUI/src/com/android/systemui/keyguard/domain/interactor/KeyguardQuickAffordanceInteractor.kt
index 7882a975..d2640e0f 100644
--- a/packages/SystemUI/src/com/android/systemui/keyguard/domain/interactor/KeyguardQuickAffordanceInteractor.kt
+++ b/packages/SystemUI/src/com/android/systemui/keyguard/domain/interactor/KeyguardQuickAffordanceInteractor.kt
@@ -88,7 +88,7 @@ constructor(
      *
      * If `false`, the UI goes back to using single taps.
      */
-    fun useLongPress(): Flow<Boolean> = dockManager.retrieveIsDocked().map { !it }
+    fun useLongPress(): Flow<Boolean> = flowOf(false)
 
     /** Returns an observable for the quick affordance at the given position. */
     suspend fun quickAffordance(
-- 
2.34.1


From 68e8795e978c65a33e4301765e552da3bdf3ce81 Mon Sep 17 00:00:00 2001
From: Danny Lin <danny@kdrag0n.dev>
Date: Sat, 16 Oct 2021 05:27:57 -0700
Subject: [PATCH 13/17] Add support for app signature spoofing

This is needed by microG GmsCore to pretend to be the official Google
Play Services package, because client apps check the package signature
to make sure it matches Google's official certificate.

This was forward-ported from the Android 10 patch by gudenau:
https://github.com/microg/android_packages_apps_GmsCore/pull/957

Changes made for Android 11:
  - Updated PackageInfo calls
  - Added new permission to public API surface, needed for
    PermissionController which is now an updatable APEX on 11
  - Added a dummy permission group to allow users to manage the
    permission through the PermissionController UI
    (by Vachounet <vachounet@live.fr>)
  - Updated location provider comment for conciseness

Changes made for Android 12:
  - Moved mayFakeSignature into lock-free Computer subclass
  - Always get permissions for packages that request signature spoofing
    (otherwise permissions are usually ommitted and thus the permission
    check doesn't work properly)
  - Optimize mayFakeSignature check order to improve performance

Changes made for Android 13:
  - Computer subclass is now an independent class.

Change-Id: Ied7d6ce0b83a2d2345c3abba0429998d86494a88

Make FAKE_PACKAGE_SIGNATURE runtime permission

Also fake new signature format

Change-Id: I3e3cff37ca289379f416ce84aebe8f44351cee8d
Signed-off-by: Daniel Zhang <danielzhang130@gmail.com>

Refactor fake signature

Change-Id: Ifa9d5b06f14446818d514781fa19abac6b139a4c
Signed-off-by: Daniel Zhang <danielzhang130@gmail.com>
---
 core/api/current.txt                          |  2 +
 core/api/lint-baseline.txt                    |  4 ++
 core/res/AndroidManifest.xml                  | 15 ++++++
 core/res/res/values/strings.xml               | 12 +++++
 .../com/android/server/pm/ComputerEngine.java |  2 +-
 .../server/pm/parsing/PackageInfoUtils.java   | 47 +++++++++++++++++--
 6 files changed, 76 insertions(+), 6 deletions(-)

diff --git a/core/api/current.txt b/core/api/current.txt
index 9b5316fb..39365fa1 100644
--- a/core/api/current.txt
+++ b/core/api/current.txt
@@ -95,6 +95,7 @@ package android {
     field public static final String EXECUTE_APP_ACTION = "android.permission.EXECUTE_APP_ACTION";
     field public static final String EXPAND_STATUS_BAR = "android.permission.EXPAND_STATUS_BAR";
     field public static final String FACTORY_TEST = "android.permission.FACTORY_TEST";
+    field public static final String FAKE_PACKAGE_SIGNATURE = "android.permission.FAKE_PACKAGE_SIGNATURE";
     field public static final String FOREGROUND_SERVICE = "android.permission.FOREGROUND_SERVICE";
     field public static final String FOREGROUND_SERVICE_CAMERA = "android.permission.FOREGROUND_SERVICE_CAMERA";
     field public static final String FOREGROUND_SERVICE_CONNECTED_DEVICE = "android.permission.FOREGROUND_SERVICE_CONNECTED_DEVICE";
@@ -328,6 +329,7 @@ package android {
     field public static final String CALL_LOG = "android.permission-group.CALL_LOG";
     field public static final String CAMERA = "android.permission-group.CAMERA";
     field public static final String CONTACTS = "android.permission-group.CONTACTS";
+    field public static final String FAKE_PACKAGE = "android.permission-group.FAKE_PACKAGE";
     field public static final String LOCATION = "android.permission-group.LOCATION";
     field public static final String MICROPHONE = "android.permission-group.MICROPHONE";
     field public static final String NEARBY_DEVICES = "android.permission-group.NEARBY_DEVICES";
diff --git a/core/api/lint-baseline.txt b/core/api/lint-baseline.txt
index f331e7f5..f5709266 100644
--- a/core/api/lint-baseline.txt
+++ b/core/api/lint-baseline.txt
@@ -1169,6 +1169,10 @@ Todo: android.provider.ContactsContract.RawContacts#newEntityIterator(android.da
     Documentation mentions 'TODO'
 
 
+UnflaggedApi: android.Manifest.permission#FAKE_PACKAGE_SIGNATURE:
+    New API must be flagged with @FlaggedApi: field android.Manifest.permission.FAKE_PACKAGE_SIGNATURE
+UnflaggedApi: android.Manifest.permission_group#FAKE_PACKAGE:
+    New API must be flagged with @FlaggedApi: field android.Manifest.permission_group.FAKE_PACKAGE
 UnflaggedApi: android.accessibilityservice.AccessibilityService#OVERLAY_RESULT_INTERNAL_ERROR:
     New API must be flagged with @FlaggedApi: field android.accessibilityservice.AccessibilityService.OVERLAY_RESULT_INTERNAL_ERROR
 UnflaggedApi: android.accessibilityservice.AccessibilityService#OVERLAY_RESULT_INVALID:
diff --git a/core/res/AndroidManifest.xml b/core/res/AndroidManifest.xml
index c6a241f2..2aac8ce2 100644
--- a/core/res/AndroidManifest.xml
+++ b/core/res/AndroidManifest.xml
@@ -4310,6 +4310,21 @@
         android:description="@string/permdesc_getPackageSize"
         android:protectionLevel="normal" />
 
+    <!-- Dummy user-facing group for faking package signature -->
+    <permission-group android:name="android.permission-group.FAKE_PACKAGE"
+        android:label="@string/permgrouplab_fake_package_signature"
+        android:description="@string/permgroupdesc_fake_package_signature"
+        android:request="@string/permgrouprequest_fake_package_signature"
+        android:priority="100" />
+
+    <!-- Allows an application to change the package signature as
+         seen by applications -->
+    <permission android:name="android.permission.FAKE_PACKAGE_SIGNATURE"
+        android:permissionGroup="android.permission-group.UNDEFINED"
+        android:protectionLevel="dangerous"
+        android:label="@string/permlab_fakePackageSignature"
+        android:description="@string/permdesc_fakePackageSignature" />
+
     <!-- @deprecated No longer useful, see
          {@link android.content.pm.PackageManager#addPackageToPreferred}
          for details. -->
diff --git a/core/res/res/values/strings.xml b/core/res/res/values/strings.xml
index 4596ca74..596218ad 100644
--- a/core/res/res/values/strings.xml
+++ b/core/res/res/values/strings.xml
@@ -994,6 +994,18 @@
 
     <!--  Permissions -->
 
+    <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+    <string name="permlab_fakePackageSignature">Spoof package signature</string>
+    <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+    <string name="permdesc_fakePackageSignature">Allows the app to pretend to be a different app. Malicious applications might be able to use this to access private application data. Legitimate uses include an emulator pretending to be what it emulates. Grant this permission with caution only!</string>
+    <!-- Title of a category of application permissions, listed so the user can choose whether they want to allow the application to do this. -->
+    <string name="permgrouplab_fake_package_signature">Spoof package signature</string>
+    <!-- Description of a category of application permissions, listed so the user can choose whether they want to allow the application to do this. -->
+    <string name="permgroupdesc_fake_package_signature">allow to spoof package signature</string>
+    <!-- Message shown to the user when the apps requests permission from this group. If ever possible this should stay below 80 characters (assuming the parameters takes 20 characters). Don't abbreviate until the message reaches 120 characters though. [CHAR LIMIT=120] -->
+    <string name="permgrouprequest_fake_package_signature">Allow
+        &lt;b><xliff:g id="app_name" example="Gmail">%1$s</xliff:g>&lt;/b> to spoof package signature?</string>
+
     <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
     <string name="permlab_statusBar">disable or modify status bar</string>
     <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
diff --git a/services/core/java/com/android/server/pm/ComputerEngine.java b/services/core/java/com/android/server/pm/ComputerEngine.java
index b0d9be30..43182f74 100644
--- a/services/core/java/com/android/server/pm/ComputerEngine.java
+++ b/services/core/java/com/android/server/pm/ComputerEngine.java
@@ -1582,7 +1582,7 @@ public class ComputerEngine implements Computer {
             pi.applicationInfo = PackageInfoUtils.generateDelegateApplicationInfo(
                     ai, flags, state, userId);
             pi.signingInfo = ps.getSigningInfo();
-            pi.signatures = getDeprecatedSignatures(pi.signingInfo.getSigningDetails(), flags);
+            pi.signatures = getDeprecatedSignatures(pi.signingInfo.getSigningDetails(), flags, null, "");
             if (state.getArchiveState() != null) {
                 pi.setArchiveTimeMillis(state.getArchiveState().getArchiveTimeMillis());
             }
diff --git a/services/core/java/com/android/server/pm/parsing/PackageInfoUtils.java b/services/core/java/com/android/server/pm/parsing/PackageInfoUtils.java
index d0fe9647..7623d0a2 100644
--- a/services/core/java/com/android/server/pm/parsing/PackageInfoUtils.java
+++ b/services/core/java/com/android/server/pm/parsing/PackageInfoUtils.java
@@ -44,6 +44,7 @@ import android.content.pm.Signature;
 import android.content.pm.SigningDetails;
 import android.content.pm.SigningInfo;
 import android.content.pm.overlay.OverlayPaths;
+import android.os.Build;
 import android.os.Environment;
 import android.os.PatternMatcher;
 import android.os.UserHandle;
@@ -82,6 +83,7 @@ import com.android.server.pm.pkg.PackageUserStateUtils;
 import com.android.server.pm.pkg.SELinuxUtil;
 
 import java.io.File;
+import java.security.cert.CertificateException;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Map;
@@ -114,6 +116,27 @@ public class PackageInfoUtils {
                 installedPermissions, grantedPermissions, state, userId, pkgSetting);
     }
 
+    private static Signature mayFakeSignature(AndroidPackage p, Set<String> permissions) {
+        try {
+            if (p.getMetaData() != null &&
+                    p.getTargetSdkVersion() > Build.VERSION_CODES.LOLLIPOP_MR1) {
+                if (permissions.contains("android.permission.FAKE_PACKAGE_SIGNATURE")) {
+                    String sig = p.getMetaData().getString("fake-signature");
+                    if (sig != null) {
+                        return new Signature(sig);
+                    } else {
+                        Slog.e(TAG, p.getPackageName() + " declared fake signature but not found");
+                        return null;
+                    }
+                }
+            }
+        } catch (Throwable t) {
+            // We should never die because of any failures, this is system code!
+            Slog.w(TAG, t);
+        }
+        return null;
+    }
+
     /**
      * @param pkgSetting See {@link PackageInfoUtils} for description of pkgSetting usage.
      */
@@ -243,11 +266,20 @@ public class PackageInfoUtils {
         }
 
         final SigningDetails signingDetails = pkg.getSigningDetails();
-        info.signatures = getDeprecatedSignatures(signingDetails, flags);
+        Signature fake = mayFakeSignature(pkg, grantedPermissions);
+        info.signatures = getDeprecatedSignatures(signingDetails, flags, fake, info.packageName);
 
         // replacement for GET_SIGNATURES
         if ((flags & PackageManager.GET_SIGNING_CERTIFICATES) != 0) {
-            if (signingDetails != SigningDetails.UNKNOWN) {
+            if (fake != null) {
+                try {
+                    info.signingInfo = new SigningInfo(new SigningDetails(
+                                new Signature[] { fake }, signingDetails.getSignatureSchemeVersion()));
+                } catch (CertificateException ex) {
+                    Slog.w(TAG, ex);
+                    info.signingInfo = null;
+                }
+            } else if (signingDetails != SigningDetails.UNKNOWN) {
                 // only return a valid SigningInfo if there is signing information to report
                 info.signingInfo = new SigningInfo(signingDetails);
             } else {
@@ -355,12 +387,17 @@ public class PackageInfoUtils {
     /**
      * Retrieve the deprecated {@link PackageInfo.signatures} field of signing certificates
      */
-    public static Signature[] getDeprecatedSignatures(SigningDetails signingDetails, long flags) {
+    public static Signature[] getDeprecatedSignatures(SigningDetails signingDetails, long flags, Signature fake, String packageName) {
         if ((flags & PackageManager.GET_SIGNATURES) == 0) {
             return null;
         }
-        if (signingDetails.hasPastSigningCertificates()) {
-            // Package has included signing certificate rotation information.  Return the oldest
+        if (fake != null) {
+            Signature[] signatures = new Signature[1];
+            signatures[0] = fake;
+            Slog.w(TAG, "fake signature for package " + packageName + " = " + signatures[0]);
+            return signatures;
+        } else if (signingDetails.hasPastSigningCertificates()) {
+ // Package has included signing certificate rotation information.  Return the oldest
             // cert so that programmatic checks keep working even if unaware of key rotation.
             Signature[] signatures = new Signature[1];
             signatures[0] = signingDetails.getPastSigningCertificates()[0];
-- 
2.34.1


From c939825fd21b4c95ae2d6ce9b0dc6c1b25c1d11f Mon Sep 17 00:00:00 2001
From: Daniel Zhang <danielzhang130@gmail.com>
Date: Wed, 3 Jan 2024 16:21:50 -0500
Subject: [PATCH 14/17] Output certificate in pm dump

Change-Id: I6c54ae43fecce81972b9b5f1239bb3ff8308e540
Signed-off-by: Daniel Zhang <danielzhang130@gmail.com>
---
 services/core/java/com/android/server/pm/Settings.java | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/services/core/java/com/android/server/pm/Settings.java b/services/core/java/com/android/server/pm/Settings.java
index d6952262..40de1175 100644
--- a/services/core/java/com/android/server/pm/Settings.java
+++ b/services/core/java/com/android/server/pm/Settings.java
@@ -5219,6 +5219,10 @@ public final class Settings implements Watchable, Snappable, ResilientAtomicFile
                     pw.println(ps.getVolumeUuid());
         }
         pw.print(prefix); pw.print("  signatures="); pw.println(ps.getSignatures());
+        Signature[] sig = ps.getSignatures().mSigningDetails.getSignatures();
+        if (sig != null && sig.length > 0) {
+            pw.print(prefix); pw.print("  certificate="); pw.println(sig[0].toCharsString());
+        }
         pw.print(prefix); pw.print("  installPermissionsFixed=");
                 pw.print(ps.isInstallPermissionsFixed());
                 pw.println();
-- 
2.34.1


From 141110543089a8d70a5e5dcb09f1a4d7fdd53e27 Mon Sep 17 00:00:00 2001
From: Daniel Zhang <danielzhang130@gmail.com>
Date: Thu, 15 Feb 2024 21:38:00 -0500
Subject: [PATCH 15/17] Add permission for Nova launcher pro

Change-Id: I79670eb2b11018568ee7b115d92cf2482e56d717
Signed-off-by: Daniel Zhang <danielzhang130@gmail.com>
---
 core/api/current.txt         | 1 +
 core/api/lint-baseline.txt   | 2 ++
 core/res/AndroidManifest.xml | 3 +++
 3 files changed, 6 insertions(+)

diff --git a/core/api/current.txt b/core/api/current.txt
index 39365fa1..1ac105da 100644
--- a/core/api/current.txt
+++ b/core/api/current.txt
@@ -229,6 +229,7 @@ package android {
     field public static final String PROVIDE_OWN_AUTOFILL_SUGGESTIONS = "android.permission.PROVIDE_OWN_AUTOFILL_SUGGESTIONS";
     field public static final String PROVIDE_REMOTE_CREDENTIALS = "android.permission.PROVIDE_REMOTE_CREDENTIALS";
     field public static final String QUERY_ALL_PACKAGES = "android.permission.QUERY_ALL_PACKAGES";
+    field public static final String RAZER_DEVICE_POWER = "razer.permission.RAZER_DEVICE_POWER";
     field public static final String READ_ASSISTANT_APP_SEARCH_DATA = "android.permission.READ_ASSISTANT_APP_SEARCH_DATA";
     field public static final String READ_BASIC_PHONE_STATE = "android.permission.READ_BASIC_PHONE_STATE";
     field public static final String READ_CALENDAR = "android.permission.READ_CALENDAR";
diff --git a/core/api/lint-baseline.txt b/core/api/lint-baseline.txt
index f5709266..dd46817c 100644
--- a/core/api/lint-baseline.txt
+++ b/core/api/lint-baseline.txt
@@ -1171,6 +1171,8 @@ Todo: android.provider.ContactsContract.RawContacts#newEntityIterator(android.da
 
 UnflaggedApi: android.Manifest.permission#FAKE_PACKAGE_SIGNATURE:
     New API must be flagged with @FlaggedApi: field android.Manifest.permission.FAKE_PACKAGE_SIGNATURE
+UnflaggedApi: android.Manifest.permission#RAZER_DEVICE_POWER:
+    New API must be flagged with @FlaggedApi: field android.Manifest.permission.RAZER_DEVICE_POWER
 UnflaggedApi: android.Manifest.permission_group#FAKE_PACKAGE:
     New API must be flagged with @FlaggedApi: field android.Manifest.permission_group.FAKE_PACKAGE
 UnflaggedApi: android.accessibilityservice.AccessibilityService#OVERLAY_RESULT_INTERNAL_ERROR:
diff --git a/core/res/AndroidManifest.xml b/core/res/AndroidManifest.xml
index 2aac8ce2..9126b4d9 100644
--- a/core/res/AndroidManifest.xml
+++ b/core/res/AndroidManifest.xml
@@ -7870,6 +7870,9 @@
     <permission android:name="android.permission.OVERRIDE_SYSTEM_KEY_BEHAVIOR_IN_FOCUSED_WINDOW"
         android:protectionLevel="signature|privileged" />
 
+    <permission android:name="razer.permission.RAZER_DEVICE_POWER"
+        android:protectionLevel="normal" />
+
     <!-- Attribution for Geofencing service. -->
     <attribution android:tag="GeofencingService" android:label="@string/geofencing_service"/>
     <!-- Attribution for Country Detector. -->
-- 
2.34.1


From ee9f77538f16e986b5da20bb1e8e1f3155f8be91 Mon Sep 17 00:00:00 2001
From: Daniel Zhang <danielzhang130@gmail.com>
Date: Sun, 17 Mar 2024 14:08:02 -0400
Subject: [PATCH 16/17] Revert "Include vendor.samsung.hardware.radio-V2.2-java
 HIDL in base libs, will be used by f/o/telephony"

This reverts commit 6c6ff345d6d38d1ca2ddd1e417438cd8fb4553a8.
---
 Android.bp | 1 -
 1 file changed, 1 deletion(-)

diff --git a/Android.bp b/Android.bp
index c65b3fe1..dd364814 100644
--- a/Android.bp
+++ b/Android.bp
@@ -225,7 +225,6 @@ java_library {
         "android.hardware.gnss-V2.1-java",
         "android.hardware.health-V1.0-java-constants",
         "android.hardware.radio-V1.6-java",
-        "vendor.samsung.hardware.radio-V2.2-java",
         "android.hardware.radio.data-V3-java",
         "android.hardware.radio.ims-V2-java",
         "android.hardware.radio.messaging-V3-java",
-- 
2.34.1


From de7f35b4c5aa0d1b55ab216dfe3847a5898025ae Mon Sep 17 00:00:00 2001
From: Daniel Zhang <danielzhang130@gmail.com>
Date: Sun, 17 Mar 2024 14:08:15 -0400
Subject: [PATCH 17/17] Revert "Include
 vendor.samsung.hardware.radio.network-V1-java in base libs, will be used by
 f/o/telephony"

This reverts commit 805647281c27b2b9d77dabc097c3c48ccf87fe62.
---
 Android.bp | 1 -
 1 file changed, 1 deletion(-)

diff --git a/Android.bp b/Android.bp
index dd364814..676a0f51 100644
--- a/Android.bp
+++ b/Android.bp
@@ -230,7 +230,6 @@ java_library {
         "android.hardware.radio.messaging-V3-java",
         "android.hardware.radio.modem-V3-java",
         "android.hardware.radio.network-V3-java",
-        "vendor.samsung.hardware.radio.network-V1-java",
         "android.hardware.radio.sim-V3-java",
         "android.hardware.radio.voice-V3-java",
         "android.hardware.thermal-V1.0-java-constants",
-- 
2.34.1

