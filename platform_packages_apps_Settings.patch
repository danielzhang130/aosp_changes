From 31cf354976854b1d5eaa8e8205baa7a14dfc4b1c Mon Sep 17 00:00:00 2001
From: danielzhang130 <danielzhang130@gmail.com>
Date: Sat, 13 Aug 2022 13:32:22 -0400
Subject: [PATCH] Add Build and Build.VERSION info to about phone screen

Signed-off-by: danielzhang130 <danielzhang130@gmail.com>
Change-Id: I0ad77dbe06acd451dc153b14b0443e3fd914c08f
---
 .../FirmwareVersionSettings.java              | 57 ++++++++++++++++
 .../SimplePreferenceController.java           | 68 +++++++++++++++++++
 2 files changed, 125 insertions(+)
 create mode 100644 src/com/android/settings/deviceinfo/firmwareversion/SimplePreferenceController.java

diff --git a/src/com/android/settings/deviceinfo/firmwareversion/FirmwareVersionSettings.java b/src/com/android/settings/deviceinfo/firmwareversion/FirmwareVersionSettings.java
index e2d3d8a..a87af62 100644
--- a/src/com/android/settings/deviceinfo/firmwareversion/FirmwareVersionSettings.java
+++ b/src/com/android/settings/deviceinfo/firmwareversion/FirmwareVersionSettings.java
@@ -17,12 +17,20 @@
 package com.android.settings.deviceinfo.firmwareversion;
 
 import android.app.settings.SettingsEnums;
+import android.content.Context;
+import android.os.Build;
 
 import com.android.settings.R;
 import com.android.settings.dashboard.DashboardFragment;
 import com.android.settings.search.BaseSearchIndexProvider;
+import com.android.settingslib.core.AbstractPreferenceController;
 import com.android.settingslib.search.SearchIndexable;
 
+import java.lang.reflect.Field;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
 @SearchIndexable
 public class FirmwareVersionSettings extends DashboardFragment {
 
@@ -41,6 +49,55 @@ public class FirmwareVersionSettings extends DashboardFragment {
         return SettingsEnums.DIALOG_FIRMWARE_VERSION;
     }
 
+    @Override
+    protected List<AbstractPreferenceController> createPreferenceControllers(Context context) {
+        List<AbstractPreferenceController> controllers = new ArrayList<>();
+        Field[] versionFields = Build.VERSION.class.getDeclaredFields();
+
+        for (Field field : versionFields) {
+            String name = "Build.VERSION." + field.getName();
+            String value = getValue(field);
+            if (value == null) {
+                continue;
+            }
+
+            controllers.add(new SimplePreferenceController(context, name, value));
+        }
+
+        Field[] buildFields = Build.class.getDeclaredFields();
+
+        for (Field field : buildFields) {
+            String name = "Build." + field.getName();
+
+            if (field.getName() == "UNKNOWN") {
+                continue;
+            }
+
+            String value = getValue(field);
+            if (value == null) {
+                continue;
+            }
+
+            controllers.add(new SimplePreferenceController(context, name, value));
+        }
+
+        return controllers;
+    }
+
+    private String getValue(Field f) {
+        try {
+            Class c = f.getType();
+
+            if (c == String[].class) {
+                return Arrays.toString((String[]) f.get(null));
+            }
+
+            return f.get(null).toString();
+        } catch (Exception e) {
+            return null;
+        }
+    }
+
     public static final BaseSearchIndexProvider SEARCH_INDEX_DATA_PROVIDER =
             new BaseSearchIndexProvider(R.xml.firmware_version);
 }
diff --git a/src/com/android/settings/deviceinfo/firmwareversion/SimplePreferenceController.java b/src/com/android/settings/deviceinfo/firmwareversion/SimplePreferenceController.java
new file mode 100644
index 0000000..3605682
--- /dev/null
+++ b/src/com/android/settings/deviceinfo/firmwareversion/SimplePreferenceController.java
@@ -0,0 +1,68 @@
+/*
+ * Copyright (C) 2022 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.settings.deviceinfo.firmwareversion;
+
+import android.content.Context;
+import android.os.Build;
+
+import androidx.preference.Preference;
+import androidx.preference.PreferenceScreen;
+
+import com.android.settingslib.core.AbstractPreferenceController;
+
+public class SimplePreferenceController extends AbstractPreferenceController {
+
+    private String mTitle;
+    private String mSummary;
+
+    public SimplePreferenceController(Context context,
+            String title, String summary) {
+        super(context);
+        mTitle = title;
+        mSummary = summary;
+    }
+
+    @Override
+    public boolean isAvailable() {
+        return true;
+    }
+
+    @Override
+    public String getPreferenceKey() {
+        return mTitle;
+    }
+
+    @Override
+    public CharSequence getSummary() {
+        return mSummary;
+    }
+
+    @Override
+    public void displayPreference(PreferenceScreen screen) {
+        Preference pref = screen.findPreference(mTitle);
+        if (pref == null) {
+            pref = new Preference(mContext);
+            screen.addPreference(pref);
+        }
+        pref.setVisible(true);
+        pref.setSelectable(false);
+        pref.setCopyingEnabled(false);
+        pref.setTitle(mTitle);
+        pref.setSummary(mSummary);
+    }
+}
+
-- 
2.34.1

