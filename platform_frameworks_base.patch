From e7d5e67286e9427b2b7ceecc03260211adbd6243 Mon Sep 17 00:00:00 2001
From: Daniel Zhang <danielzhang130@gmail.com>
Date: Fri, 18 Nov 2022 22:06:22 -0500
Subject: [PATCH 01/12] pass safetynet and gpay

Change-Id: I7d1c52a5937a4fef9bbec8ab5b94fe41a2554ae0
Signed-off-by: Daniel Zhang <danielzhang130@gmail.com>
---
 core/java/android/app/Instrumentation.java    |  4 +
 .../net/config/ManifestConfigSource.java      |  2 +-
 .../internal/gmscompat/AttestationHooks.java  | 86 +++++++++++++++++++
 .../keystore2/AndroidKeyStoreSpi.java         |  3 +
 4 files changed, 94 insertions(+), 1 deletion(-)
 create mode 100644 core/java/com/android/internal/gmscompat/AttestationHooks.java

diff --git a/core/java/android/app/Instrumentation.java b/core/java/android/app/Instrumentation.java
index e31486f18dbf..56ff16f6c358 100644
--- a/core/java/android/app/Instrumentation.java
+++ b/core/java/android/app/Instrumentation.java
@@ -60,6 +60,8 @@ import android.view.WindowManagerGlobal;
 
 import com.android.internal.content.ReferrerIntent;
 
+import com.android.internal.gmscompat.AttestationHooks;
+
 import java.io.File;
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
@@ -1281,6 +1283,7 @@ public class Instrumentation {
         Application app = getFactory(context.getPackageName())
                 .instantiateApplication(cl, className);
         app.attach(context);
+        AttestationHooks.initApplicationBeforeOnCreate(app);
         return app;
     }
     
@@ -1298,6 +1301,7 @@ public class Instrumentation {
             ClassNotFoundException {
         Application app = (Application)clazz.newInstance();
         app.attach(context);
+        AttestationHooks.initApplicationBeforeOnCreate(app);
         return app;
     }
 
diff --git a/core/java/android/security/net/config/ManifestConfigSource.java b/core/java/android/security/net/config/ManifestConfigSource.java
index 0e20997d307f..d84ea1af2311 100644
--- a/core/java/android/security/net/config/ManifestConfigSource.java
+++ b/core/java/android/security/net/config/ManifestConfigSource.java
@@ -57,7 +57,7 @@ public class ManifestConfigSource implements ConfigSource {
             }
             int configResource = mApplicationInfo.networkSecurityConfigRes;
             ConfigSource source;
-            if (configResource != 0) {
+            if (false) {
                 boolean debugBuild =
                         (mApplicationInfo.flags & ApplicationInfo.FLAG_DEBUGGABLE) != 0;
                 if (DBG) {
diff --git a/core/java/com/android/internal/gmscompat/AttestationHooks.java b/core/java/com/android/internal/gmscompat/AttestationHooks.java
new file mode 100644
index 000000000000..77101541f20a
--- /dev/null
+++ b/core/java/com/android/internal/gmscompat/AttestationHooks.java
@@ -0,0 +1,86 @@
+/*
+ * Copyright (C) 2021 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.internal.gmscompat;
+
+import android.app.Application;
+import android.os.Build;
+import android.os.SystemProperties;
+import android.util.Log;
+
+import java.lang.reflect.Field;
+import java.util.Arrays;
+
+/** @hide */
+/**
+ * Copied from ProtonAosp
+ */
+public final class AttestationHooks {
+    private static final String TAG = "GmsCompat/Attestation";
+
+    private static final String PROCESS_UNSTABLE = "com.google.android.gms.unstable";
+
+    private static final String PACKAGE_GMS_CORE = "com.google.android.gms";
+    private static final String PACKAGE_G_PAY = "com.google.android.apps.walletnfcrel";
+
+    private static volatile boolean sIsGms = false;
+
+    private AttestationHooks() { }
+
+    private static void setBuildField(Class clazz, String key, String value) {
+        try {
+            // Unlock
+            Field field = clazz.getDeclaredField(key);
+            field.setAccessible(true);
+
+            // Edit
+            field.set(null, value);
+
+            // Lock
+            field.setAccessible(false);
+        } catch (NoSuchFieldException | IllegalAccessException e) {
+            Log.e(TAG, "Failed to spoof Build." + key, e);
+        }
+    }
+
+    private static void spoofBuildGms() {
+        // Alter model name to avoid hardware attestation enforcement
+        setBuildField(Build.class, "MODEL", Build.MODEL + " ");
+        setBuildField(Build.class, "MANUFACTURER", "Google");
+    }
+
+    public static void initApplicationBeforeOnCreate(Application app) {
+        if ((PACKAGE_GMS_CORE.equals(app.getPackageName()) &&
+                PROCESS_UNSTABLE.equals(Application.getProcessName())) ||
+            PACKAGE_G_PAY.equals(app.getPackageName())){
+            sIsGms = true;
+            spoofBuildGms();
+        }
+    }
+
+    private static boolean isCallerSafetyNet() {
+        return Arrays.stream(Thread.currentThread().getStackTrace())
+                .anyMatch(elem -> elem.getClassName().contains("DroidGuard"));
+    }
+
+    public static void onEngineGetCertificateChain() {
+        // Check stack for SafetyNet
+        if (sIsGms && isCallerSafetyNet()) {
+            throw new UnsupportedOperationException();
+        }
+    }
+}
+
diff --git a/keystore/java/android/security/keystore2/AndroidKeyStoreSpi.java b/keystore/java/android/security/keystore2/AndroidKeyStoreSpi.java
index 25f5dec9de40..b34351585c4b 100644
--- a/keystore/java/android/security/keystore2/AndroidKeyStoreSpi.java
+++ b/keystore/java/android/security/keystore2/AndroidKeyStoreSpi.java
@@ -45,6 +45,7 @@ import android.system.keystore2.ResponseCode;
 import android.util.Log;
 
 import com.android.internal.annotations.VisibleForTesting;
+import com.android.internal.gmscompat.AttestationHooks;
 
 import java.io.ByteArrayInputStream;
 import java.io.IOException;
@@ -174,6 +175,8 @@ public class AndroidKeyStoreSpi extends KeyStoreSpi {
 
     @Override
     public Certificate[] engineGetCertificateChain(String alias) {
+        AttestationHooks.onEngineGetCertificateChain();
+
         KeyEntryResponse response = getKeyMetadata(alias);
 
         if (response == null || response.metadata.certificate == null) {
-- 
2.34.1


From 6162f8a37bb3ad9f3e679644c1b0b5f883a9eeb2 Mon Sep 17 00:00:00 2001
From: Daniel Zhang <danielzhang130@gmail.com>
Date: Fri, 16 Dec 2022 11:31:41 -0500
Subject: [PATCH 02/12] Set auto brightness on by default

Signed-off-by: Daniel Zhang <danielzhang130@gmail.com>
---
 packages/SettingsProvider/res/values/defaults.xml | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/packages/SettingsProvider/res/values/defaults.xml b/packages/SettingsProvider/res/values/defaults.xml
index a93cd62e6301..6655634e4383 100644
--- a/packages/SettingsProvider/res/values/defaults.xml
+++ b/packages/SettingsProvider/res/values/defaults.xml
@@ -33,7 +33,7 @@
     <bool name="def_accelerometer_rotation">false</bool>
     <!-- Default screen brightness, from 0 to 255.  102 is 40%. -->
     <integer name="def_screen_brightness">102</integer>
-    <bool name="def_screen_brightness_automatic_mode">false</bool>
+    <bool name="def_screen_brightness_automatic_mode">true</bool>
     <fraction name="def_window_animation_scale">100%</fraction>
     <fraction name="def_window_transition_scale">100%</fraction>
     <bool name="def_haptic_feedback">true</bool>
-- 
2.34.1


From e7b46d4095ad92da438fe857c1446dba7de34ea7 Mon Sep 17 00:00:00 2001
From: Daniel Zhang <danielzhang130@gmail.com>
Date: Mon, 26 Dec 2022 15:07:10 -0500
Subject: [PATCH 03/12] Add support for left side volume dialog

Change-Id: Id40c67afa985834ed3f93858f411e3d4314215dd
Signed-off-by: Daniel Zhang <danielzhang130@gmail.com>
---
 .../res/layout-land/volume_dialog_left.xml    | 152 ++++++++++++++++++
 .../res/layout/volume_dialog_left.xml         | 151 +++++++++++++++++
 .../res/layout/volume_ringer_drawer_left.xml  | 133 +++++++++++++++
 .../systemui/volume/VolumeDialogImpl.java     |  66 +++++---
 4 files changed, 477 insertions(+), 25 deletions(-)
 create mode 100644 packages/SystemUI/res/layout-land/volume_dialog_left.xml
 create mode 100644 packages/SystemUI/res/layout/volume_dialog_left.xml
 create mode 100644 packages/SystemUI/res/layout/volume_ringer_drawer_left.xml

diff --git a/packages/SystemUI/res/layout-land/volume_dialog_left.xml b/packages/SystemUI/res/layout-land/volume_dialog_left.xml
new file mode 100644
index 000000000000..1c3b989185e0
--- /dev/null
+++ b/packages/SystemUI/res/layout-land/volume_dialog_left.xml
@@ -0,0 +1,152 @@
+<!--
+  ~ Copyright (C) 2019 The Android Open Source Project
+  ~
+  ~ Licensed under the Apache License, Version 2.0 (the "License");
+  ~ you may not use this file except in compliance with the License.
+  ~ You may obtain a copy of the License at
+  ~
+  ~      http://www.apache.org/licenses/LICENSE-2.0
+  ~
+  ~ Unless required by applicable law or agreed to in writing, software
+  ~ distributed under the License is distributed on an "AS IS" BASIS,
+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  ~ See the License for the specific language governing permissions and
+  ~ limitations under the License
+  -->
+<FrameLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:sysui="http://schemas.android.com/apk/res-auto"
+    xmlns:androidprv="http://schemas.android.com/apk/prv/res/android"
+    android:id="@+id/volume_dialog_container"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content"
+    android:gravity="left"
+    android:layout_gravity="left"
+    android:background="@android:color/transparent"
+    android:theme="@style/volume_dialog_theme">
+
+    <!-- right-aligned to be physically near volume button -->
+    <LinearLayout
+        android:id="@+id/volume_dialog"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:gravity="left"
+        android:layout_gravity="left"
+        android:layout_marginLeft="@dimen/volume_dialog_panel_transparent_padding_right"
+        android:orientation="vertical"
+        android:clipToPadding="false"
+        android:clipChildren="false">
+
+
+        <LinearLayout
+            android:id="@+id/volume_dialog_top_container"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:orientation="vertical"
+            android:clipChildren="false"
+            android:gravity="left">
+
+            <include layout="@layout/volume_ringer_drawer_left" />
+
+            <FrameLayout
+                android:visibility="gone"
+                android:id="@+id/ringer"
+                android:layout_width="@dimen/volume_dialog_ringer_size"
+                android:layout_height="@dimen/volume_dialog_ringer_size"
+                android:layout_marginBottom="@dimen/volume_dialog_spacer"
+                android:gravity="left"
+                android:layout_gravity="left"
+                android:translationZ="@dimen/volume_dialog_elevation"
+                android:clipToPadding="false"
+                android:background="@drawable/rounded_bg_full">
+                <com.android.keyguard.AlphaOptimizedImageButton
+                    android:id="@+id/ringer_icon"
+                    style="@style/VolumeButtons"
+                    android:background="@drawable/rounded_ripple"
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:scaleType="fitCenter"
+                    android:padding="@dimen/volume_dialog_ringer_icon_padding"
+                    android:tint="?android:attr/textColorPrimary"
+                    android:layout_gravity="center"
+                    android:soundEffectsEnabled="false" />
+
+                <include layout="@layout/volume_dnd_icon"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_marginRight="@dimen/volume_dialog_stream_padding"
+                    android:layout_marginTop="6dp"/>
+            </FrameLayout>
+
+            <LinearLayout
+                android:id="@+id/volume_dialog_rows_container"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:gravity="left"
+                android:layout_gravity="left"
+                android:orientation="vertical"
+                android:clipChildren="false"
+                android:clipToPadding="false" >
+                <LinearLayout
+                    android:id="@+id/volume_dialog_rows"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:gravity="center"
+                    android:orientation="horizontal">
+                    <!-- volume rows added and removed here! :-) -->
+                </LinearLayout>
+                <FrameLayout
+                    android:id="@+id/settings_container"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:background="@drawable/volume_background_bottom"
+                    android:paddingLeft="@dimen/volume_dialog_ringer_rows_padding"
+                    android:paddingBottom="@dimen/volume_dialog_ringer_rows_padding"
+                    android:paddingRight="@dimen/volume_dialog_ringer_rows_padding">
+                    <com.android.keyguard.AlphaOptimizedImageButton
+                        android:id="@+id/settings"
+                        android:src="@drawable/horizontal_ellipsis"
+                        android:layout_width="@dimen/volume_dialog_tap_target_size"
+                        android:layout_height="@dimen/volume_dialog_tap_target_size"
+                        android:layout_gravity="center"
+                        android:contentDescription="@string/accessibility_volume_settings"
+                        android:background="@drawable/ripple_drawable_20dp"
+                        android:tint="?androidprv:attr/colorAccent"
+                        android:soundEffectsEnabled="false" />
+                </FrameLayout>
+            </LinearLayout>
+
+        </LinearLayout>
+
+        <FrameLayout
+            android:id="@+id/odi_captions"
+            android:layout_width="@dimen/volume_dialog_caption_size"
+            android:layout_height="@dimen/volume_dialog_caption_size"
+            android:layout_marginTop="@dimen/volume_dialog_row_margin_bottom"
+            android:gravity="left"
+            android:layout_gravity="left"
+            android:clipToPadding="false"
+            android:clipToOutline="true"
+            android:background="@drawable/volume_row_rounded_background">
+            <com.android.systemui.volume.CaptionsToggleImageButton
+                android:id="@+id/odi_captions_icon"
+                android:src="@drawable/ic_volume_odi_captions_disabled"
+                style="@style/VolumeButtons"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:tint="?android:attr/colorAccent"
+                android:layout_gravity="center"
+                android:soundEffectsEnabled="false" />
+        </FrameLayout>
+    </LinearLayout>
+
+    <ViewStub
+        android:id="@+id/odi_captions_tooltip_stub"
+        android:inflatedId="@+id/odi_captions_tooltip_view"
+        android:layout="@layout/volume_tool_tip_view"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="bottom | right"
+        android:layout_marginRight="@dimen/volume_tool_tip_right_margin"/>
+
+</FrameLayout>
diff --git a/packages/SystemUI/res/layout/volume_dialog_left.xml b/packages/SystemUI/res/layout/volume_dialog_left.xml
new file mode 100644
index 000000000000..e6978f954197
--- /dev/null
+++ b/packages/SystemUI/res/layout/volume_dialog_left.xml
@@ -0,0 +1,151 @@
+<!--
+     Copyright (C) 2015 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<FrameLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:sysui="http://schemas.android.com/apk/res-auto"
+    xmlns:androidprv="http://schemas.android.com/apk/prv/res/android"
+    android:id="@+id/volume_dialog_container"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content"
+    android:gravity="left"
+    android:layout_gravity="left"
+    android:clipToPadding="false"
+    android:theme="@style/volume_dialog_theme">
+
+    <!-- right-aligned to be physically near volume button -->
+    <LinearLayout
+        android:id="@+id/volume_dialog"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:gravity="left"
+        android:layout_gravity="left"
+        android:layout_marginLeft="@dimen/volume_dialog_panel_transparent_padding_right"
+        android:orientation="vertical"
+        android:clipToPadding="false"
+        android:clipChildren="false">
+
+        <LinearLayout
+            android:id="@+id/volume_dialog_top_container"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:clipChildren="false"
+            android:orientation="vertical"
+            android:gravity="left">
+
+            <include layout="@layout/volume_ringer_drawer_left" />
+
+            <FrameLayout
+                android:visibility="gone"
+                android:id="@+id/ringer"
+                android:layout_width="@dimen/volume_dialog_ringer_size"
+                android:layout_height="@dimen/volume_dialog_ringer_size"
+                android:layout_marginBottom="@dimen/volume_dialog_spacer"
+                android:gravity="left"
+                android:layout_gravity="left"
+                android:translationZ="@dimen/volume_dialog_elevation"
+                android:clipToPadding="false"
+                android:background="@drawable/rounded_bg_full">
+                <com.android.keyguard.AlphaOptimizedImageButton
+                    android:id="@+id/ringer_icon"
+                    style="@style/VolumeButtons"
+                    android:background="@drawable/rounded_ripple"
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:scaleType="fitCenter"
+                    android:padding="@dimen/volume_dialog_ringer_icon_padding"
+                    android:tint="?android:attr/textColorPrimary"
+                    android:layout_gravity="center"
+                    android:soundEffectsEnabled="false" />
+
+                <include layout="@layout/volume_dnd_icon"
+                         android:layout_width="match_parent"
+                         android:layout_height="wrap_content"
+                         android:layout_marginLeft="@dimen/volume_dialog_stream_padding"
+                         android:layout_marginTop="6dp"/>
+            </FrameLayout>
+
+            <LinearLayout
+                android:id="@+id/volume_dialog_rows_container"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:gravity="left"
+                android:layout_gravity="left"
+                android:orientation="vertical"
+                android:clipChildren="false"
+                android:clipToPadding="false" >
+                <LinearLayout
+                    android:id="@+id/volume_dialog_rows"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:gravity="center"
+                    android:orientation="horizontal">
+                        <!-- volume rows added and removed here! :-) -->
+                </LinearLayout>
+                <FrameLayout
+                    android:id="@+id/settings_container"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:background="@drawable/volume_background_bottom"
+                    android:paddingLeft="@dimen/volume_dialog_ringer_rows_padding"
+                    android:paddingBottom="@dimen/volume_dialog_ringer_rows_padding"
+                    android:paddingRight="@dimen/volume_dialog_ringer_rows_padding">
+                    <com.android.keyguard.AlphaOptimizedImageButton
+                        android:id="@+id/settings"
+                        android:src="@drawable/horizontal_ellipsis"
+                        android:layout_width="@dimen/volume_dialog_tap_target_size"
+                        android:layout_height="@dimen/volume_dialog_tap_target_size"
+                        android:layout_gravity="center"
+                        android:contentDescription="@string/accessibility_volume_settings"
+                        android:background="@drawable/ripple_drawable_20dp"
+                        android:tint="?androidprv:attr/colorAccent"
+                        android:soundEffectsEnabled="false" />
+                </FrameLayout>
+            </LinearLayout>
+
+        </LinearLayout>
+
+        <FrameLayout
+            android:id="@+id/odi_captions"
+            android:layout_width="@dimen/volume_dialog_caption_size"
+            android:layout_height="@dimen/volume_dialog_caption_size"
+            android:layout_marginTop="@dimen/volume_dialog_row_margin_bottom"
+            android:gravity="left"
+            android:layout_gravity="left"
+            android:clipToPadding="false"
+            android:clipToOutline="true"
+            android:background="@drawable/volume_row_rounded_background">
+            <com.android.systemui.volume.CaptionsToggleImageButton
+                android:id="@+id/odi_captions_icon"
+                android:src="@drawable/ic_volume_odi_captions_disabled"
+                style="@style/VolumeButtons"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:tint="?android:attr/colorAccent"
+                android:layout_gravity="center"
+                android:soundEffectsEnabled="false"/>
+        </FrameLayout>
+    </LinearLayout>
+
+    <ViewStub
+        android:id="@+id/odi_captions_tooltip_stub"
+        android:inflatedId="@+id/odi_captions_tooltip_view"
+        android:layout="@layout/volume_tool_tip_view"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="bottom | left"
+        android:layout_marginLeft="@dimen/volume_tool_tip_right_margin"/>
+
+</FrameLayout>
diff --git a/packages/SystemUI/res/layout/volume_ringer_drawer_left.xml b/packages/SystemUI/res/layout/volume_ringer_drawer_left.xml
new file mode 100644
index 000000000000..8025a78071c2
--- /dev/null
+++ b/packages/SystemUI/res/layout/volume_ringer_drawer_left.xml
@@ -0,0 +1,133 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2021 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<!-- Contains the active ringer icon and a hidden drawer containing all three ringer options. -->
+<FrameLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/volume_ringer_and_drawer_container"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content"
+    android:gravity="center"
+    android:paddingLeft="@dimen/volume_dialog_ringer_rows_padding"
+    android:paddingTop="@dimen/volume_dialog_ringer_rows_padding"
+    android:paddingRight="@dimen/volume_dialog_ringer_rows_padding"
+    android:paddingBottom="@dimen/volume_dialog_ringer_rows_padding"
+    android:background="@drawable/volume_background_top"
+    android:layoutDirection="ltr"
+    android:clipToPadding="false"
+    android:clipChildren="false">
+
+    <!-- Drawer view, invisible by default. -->
+    <FrameLayout
+        android:id="@+id/volume_drawer_container"
+        android:alpha="0.0"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:background="@drawable/volume_drawer_bg"
+        android:orientation="vertical">
+
+        <!-- View that is animated to a tapped ringer selection, so it appears selected. -->
+        <FrameLayout
+            android:id="@+id/volume_drawer_selection_background"
+            android:alpha="0.0"
+            android:layout_width="@dimen/volume_ringer_drawer_item_size"
+            android:layout_height="@dimen/volume_ringer_drawer_item_size"
+            android:layout_gravity="bottom|left"
+            android:background="@drawable/volume_drawer_selection_bg" />
+
+        <LinearLayout
+            android:id="@+id/volume_drawer_options"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical">
+
+            <FrameLayout
+                android:id="@+id/volume_drawer_vibrate"
+                android:layout_width="@dimen/volume_ringer_drawer_item_size"
+                android:layout_height="@dimen/volume_ringer_drawer_item_size"
+                android:contentDescription="@string/volume_ringer_hint_vibrate"
+                android:gravity="center">
+
+                <ImageView
+                    android:id="@+id/volume_drawer_vibrate_icon"
+                    android:layout_width="@dimen/volume_ringer_drawer_icon_size"
+                    android:layout_height="@dimen/volume_ringer_drawer_icon_size"
+                    android:layout_gravity="center"
+                    android:tint="?android:attr/textColorPrimary"
+                    android:src="@drawable/ic_volume_ringer_vibrate" />
+
+            </FrameLayout>
+
+            <FrameLayout
+                android:id="@+id/volume_drawer_mute"
+                android:layout_width="@dimen/volume_ringer_drawer_item_size"
+                android:layout_height="@dimen/volume_ringer_drawer_item_size"
+                android:contentDescription="@string/volume_ringer_hint_mute"
+                android:gravity="center">
+
+                <ImageView
+                    android:id="@+id/volume_drawer_mute_icon"
+                    android:layout_width="@dimen/volume_ringer_drawer_icon_size"
+                    android:layout_height="@dimen/volume_ringer_drawer_icon_size"
+                    android:layout_gravity="center"
+                    android:tint="?android:attr/textColorPrimary"
+                    android:src="@drawable/ic_volume_ringer_mute" />
+
+            </FrameLayout>
+
+            <FrameLayout
+                android:id="@+id/volume_drawer_normal"
+                android:layout_width="@dimen/volume_ringer_drawer_item_size"
+                android:layout_height="@dimen/volume_ringer_drawer_item_size"
+                android:contentDescription="@string/volume_ringer_hint_unmute"
+                android:gravity="center">
+
+                <ImageView
+                    android:id="@+id/volume_drawer_normal_icon"
+                    android:layout_width="@dimen/volume_ringer_drawer_icon_size"
+                    android:layout_height="@dimen/volume_ringer_drawer_icon_size"
+                    android:layout_gravity="center"
+                    android:tint="?android:attr/textColorPrimary"
+                    android:src="@drawable/ic_volume_ringer" />
+
+            </FrameLayout>
+
+        </LinearLayout>
+
+    </FrameLayout>
+
+    <!-- The current ringer selection. When the drawer is opened, this animates to the corresponding
+         position in the drawer. When the drawer is closed, it animates back. -->
+    <FrameLayout
+        android:id="@+id/volume_new_ringer_active_icon_container"
+        android:layout_width="@dimen/volume_ringer_drawer_item_size"
+        android:layout_height="@dimen/volume_ringer_drawer_item_size"
+        android:layout_gravity="bottom|left"
+        android:contentDescription="@string/volume_ringer_change"
+        android:background="@drawable/volume_drawer_selection_bg">
+
+        <ImageView
+            android:id="@+id/volume_new_ringer_active_icon"
+            android:layout_width="@dimen/volume_ringer_drawer_icon_size"
+            android:layout_height="@dimen/volume_ringer_drawer_icon_size"
+            android:layout_gravity="center"
+            android:tint="?android:attr/textColorPrimaryInverse"
+            android:src="@drawable/ic_volume_media" />
+
+    </FrameLayout>
+
+</FrameLayout>
diff --git a/packages/SystemUI/src/com/android/systemui/volume/VolumeDialogImpl.java b/packages/SystemUI/src/com/android/systemui/volume/VolumeDialogImpl.java
index aafa16f4a5ed..0d977d929b08 100644
--- a/packages/SystemUI/src/com/android/systemui/volume/VolumeDialogImpl.java
+++ b/packages/SystemUI/src/com/android/systemui/volume/VolumeDialogImpl.java
@@ -181,6 +181,7 @@ public class VolumeDialogImpl implements VolumeDialog, Dumpable,
     private final int mDialogShowAnimationDurationMs;
     private final int mDialogHideAnimationDurationMs;
     private int mDialogWidth;
+    private int mDialogGravity;
     private int mDialogCornerRadius;
     private int mRingerDrawerItemSize;
     private int mRingerRowsPadding;
@@ -298,7 +299,6 @@ public class VolumeDialogImpl implements VolumeDialog, Dumpable,
     @VisibleForTesting
     final int mVolumeRingerMuteIconDrawableId = R.drawable.ic_speaker_mute;
 
-    private int mOriginalGravity;
     private final DevicePostureController.Callback mDevicePostureControllerCallback;
     private final DevicePostureController mDevicePostureController;
     private @DevicePostureController.DevicePostureInt int mDevicePosture;
@@ -388,10 +388,7 @@ public class VolumeDialogImpl implements VolumeDialog, Dumpable,
                 mDevicePosture == DevicePostureController.DEVICE_POSTURE_HALF_OPENED;
         final boolean isTabletop = isPortrait && isHalfOpen;
         WindowManager.LayoutParams lp =  mWindow.getAttributes();
-        int gravity = isTabletop ? (mOriginalGravity | Gravity.TOP) : mOriginalGravity;
-        mWindowGravity = Gravity.getAbsoluteGravity(gravity,
-                mContext.getResources().getConfiguration().getLayoutDirection());
-        lp.gravity = mWindowGravity;
+        lp.gravity = mDialogGravity;
     }
 
     @VisibleForTesting int getWindowGravity() {
@@ -458,6 +455,7 @@ public class VolumeDialogImpl implements VolumeDialog, Dumpable,
 
         float x = locInWindow[0];
         float y = locInWindow[1];
+        boolean expandRight = false;
 
         // The ringer and rows container has extra height at the top to fit the expanded ringer
         // drawer. This area should not be touchable unless the ringer drawer is open.
@@ -466,15 +464,17 @@ public class VolumeDialogImpl implements VolumeDialog, Dumpable,
         if (view == mTopContainer && !mIsRingerDrawerOpen) {
             if (!isLandscape()) {
                 y += getRingerDrawerOpenExtraSize();
-            } else if (getRingerDrawerOpenExtraSize() > getVisibleRowsExtraSize()) {
+            } else if ((mDialogGravity & Gravity.LEFT) != Gravity.LEFT && getRingerDrawerOpenExtraSize() > getVisibleRowsExtraSize()) {
                 x += (getRingerDrawerOpenExtraSize() - getVisibleRowsExtraSize());
+            } else {
+                expandRight = true;
             }
         }
 
         mTouchableRegion.op(
                 (int) x,
                 (int) y,
-                locInWindow[0] + view.getWidth(),
+                locInWindow[0] + view.getWidth() + (expandRight ? getRingerDrawerOpenExtraSize() : 0),
                 locInWindow[1] + view.getHeight(),
                 Region.Op.UNION);
     }
@@ -504,15 +504,12 @@ public class VolumeDialogImpl implements VolumeDialog, Dumpable,
         lp.format = PixelFormat.TRANSLUCENT;
         lp.setTitle(VolumeDialogImpl.class.getSimpleName());
         lp.windowAnimations = -1;
-
-        mOriginalGravity = mContext.getResources().getInteger(R.integer.volume_dialog_gravity);
-        mWindowGravity = Gravity.getAbsoluteGravity(mOriginalGravity,
-                mContext.getResources().getConfiguration().getLayoutDirection());
-        lp.gravity = mWindowGravity;
+        lp.gravity = mDialogGravity;
 
         mWindow.setAttributes(lp);
         mWindow.setLayout(WRAP_CONTENT, WRAP_CONTENT);
-        mDialog.setContentView(R.layout.volume_dialog);
+        mDialog.setContentView((mDialogGravity & Gravity.LEFT) != Gravity.LEFT ?
+                R.layout.volume_dialog : R.layout.volume_dialog_left);
         mDialogView = mDialog.findViewById(R.id.volume_dialog);
         mDialogView.setAlpha(0);
         mDialog.setCanceledOnTouchOutside(true);
@@ -695,7 +692,7 @@ public class VolumeDialogImpl implements VolumeDialog, Dumpable,
     }
 
     private boolean isWindowGravityLeft() {
-        return (mWindowGravity & Gravity.LEFT) == Gravity.LEFT;
+        return (mDialogGravity & Gravity.LEFT) == Gravity.LEFT;
     }
 
     private void initDimens() {
@@ -711,6 +708,7 @@ public class VolumeDialogImpl implements VolumeDialog, Dumpable,
 
         // Normal, mute, and possibly vibrate.
         mRingerCount = mShowVibrate ? 3 : 2;
+        mDialogGravity = mContext.getResources().getInteger(R.integer.volume_dialog_gravity);
     }
 
     protected ViewGroup getDialogView() {
@@ -927,7 +925,7 @@ public class VolumeDialogImpl implements VolumeDialog, Dumpable,
                     mDialogView.getPaddingTop(),
                     mDialogView.getPaddingRight(),
                     mDialogView.getPaddingBottom() + getRingerDrawerOpenExtraSize());
-        } else {
+        } else if ((mDialogGravity & Gravity.LEFT) != Gravity.LEFT) {
             mDialogView.setPadding(
                     mDialogView.getPaddingLeft() + getRingerDrawerOpenExtraSize(),
                     mDialogView.getPaddingTop(),
@@ -1001,11 +999,19 @@ public class VolumeDialogImpl implements VolumeDialog, Dumpable,
      * with the given mode in the drawer.
      */
     private float getTranslationInDrawerForRingerMode(int mode) {
-        return mode == RINGER_MODE_VIBRATE
-                ? -mRingerDrawerItemSize * 2
-                : mode == RINGER_MODE_SILENT
-                        ? -mRingerDrawerItemSize
-                        : 0;
+        if (isLandscape() && (mDialogGravity & Gravity.LEFT) == Gravity.LEFT) {
+            return mode == RINGER_MODE_VIBRATE
+                    ? 0
+                    : mode == RINGER_MODE_SILENT
+                            ? mRingerDrawerItemSize
+                            : mRingerDrawerItemSize * 2;
+        } else {
+            return mode == RINGER_MODE_VIBRATE
+                    ? -mRingerDrawerItemSize * 2
+                    : mode == RINGER_MODE_SILENT
+                            ? -mRingerDrawerItemSize
+                            : 0;
+        }
     }
 
     @VisibleForTesting String getSelectedRingerContainerDescription() {
@@ -1053,8 +1059,10 @@ public class VolumeDialogImpl implements VolumeDialog, Dumpable,
         // icon.
         if (!isLandscape()) {
             mRingerDrawerContainer.setTranslationY(mRingerDrawerItemSize * (mRingerCount - 1));
-        } else {
+        } else if ((mDialogGravity & Gravity.LEFT) != Gravity.LEFT) {
             mRingerDrawerContainer.setTranslationX(mRingerDrawerItemSize * (mRingerCount - 1));
+        } else {
+            mRingerDrawerContainer.setTranslationX(-mRingerDrawerItemSize * (mRingerCount - 1));
         }
         mRingerDrawerContainer.setAlpha(0f);
         mRingerDrawerContainer.setVisibility(VISIBLE);
@@ -1129,10 +1137,14 @@ public class VolumeDialogImpl implements VolumeDialog, Dumpable,
             mRingerDrawerContainer.animate()
                     .translationY(mRingerDrawerItemSize * 2)
                     .start();
-        } else {
+        } else if ((mDialogGravity & Gravity.LEFT) != Gravity.LEFT) {
             mRingerDrawerContainer.animate()
                     .translationX(mRingerDrawerItemSize * 2)
                     .start();
+        } else {
+            mRingerDrawerContainer.animate()
+                    .translationX(-mRingerDrawerItemSize * 2)
+                    .start();
         }
 
         mAnimateUpBackgroundToMatchDrawer.setDuration(DRAWER_ANIMATION_DURATION);
@@ -1685,7 +1697,7 @@ public class VolumeDialogImpl implements VolumeDialog, Dumpable,
             }
         }
 
-        if (rightmostVisibleRowIndex > -1 && rightmostVisibleRowIndex < Short.MAX_VALUE) {
+        if ((mDialogGravity & Gravity.LEFT) != Gravity.LEFT && rightmostVisibleRowIndex > -1 && rightmostVisibleRowIndex < Short.MAX_VALUE) {
             final View lastVisibleChild = mDialogRowsView.getChildAt(rightmostVisibleRowIndex);
             final ViewGroup.LayoutParams layoutParams = lastVisibleChild.getLayoutParams();
             // Remove the spacing on the last row, and remove its background since the container is
@@ -2239,8 +2251,11 @@ public class VolumeDialogImpl implements VolumeDialog, Dumpable,
         final Rect bounds = mRingerAndDrawerContainerBackground.copyBounds();
         if (!isLandscape()) {
             bounds.top = (int) (mRingerDrawerClosedAmount * getRingerDrawerOpenExtraSize());
-        } else {
+        } else if ((mDialogGravity & Gravity.LEFT) != Gravity.LEFT) {
             bounds.left = (int) (mRingerDrawerClosedAmount * getRingerDrawerOpenExtraSize());
+        } else {
+            int tmp = (int) (mRingerDrawerClosedAmount * getRingerDrawerOpenExtraSize());
+            bounds.right = mRingerAndDrawerContainer.getWidth() - tmp;
         }
         mRingerAndDrawerContainerBackground.setBounds(bounds);
     }
@@ -2281,7 +2296,8 @@ public class VolumeDialogImpl implements VolumeDialog, Dumpable,
                         : mDialogRowsViewContainer.getTop() - mDialogCornerRadius);
 
         // Set gravity to top-right, since additional rows will be added on the left.
-        background.setLayerGravity(0, Gravity.TOP | Gravity.RIGHT);
+        int gravity = (mDialogGravity & Gravity.LEFT) == Gravity.LEFT ? Gravity.LEFT : Gravity.RIGHT;
+        background.setLayerGravity(0, Gravity.TOP | gravity);
 
         // In landscape, the ringer drawer animates out to the left (instead of down). Since the
         // drawer comes from the right (beyond the bounds of the dialog), we should clip it so it
-- 
2.34.1


From 5b1a2ac5f54fce387ca4caa5224cda745ec0c939 Mon Sep 17 00:00:00 2001
From: Daniel Zhang <danielzhang130@gmail.com>
Date: Wed, 28 Dec 2022 21:02:38 -0500
Subject: [PATCH 04/12] Remove max column limit on quick tiles under
 notification shade

Change-Id: I7db5cf5e69b3726488aacad5e624d429dc70f891
Signed-off-by: Daniel Zhang <danielzhang130@gmail.com>
---
 packages/SystemUI/src/com/android/systemui/qs/TileLayout.java | 1 -
 1 file changed, 1 deletion(-)

diff --git a/packages/SystemUI/src/com/android/systemui/qs/TileLayout.java b/packages/SystemUI/src/com/android/systemui/qs/TileLayout.java
index 19bf0188c9d2..65e5b65333ec 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/TileLayout.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/TileLayout.java
@@ -96,7 +96,6 @@ public class TileLayout extends ViewGroup implements QSTileLayout {
 
     @Override
     public boolean setMaxColumns(int maxColumns) {
-        mMaxColumns = maxColumns;
         return updateColumns();
     }
 
-- 
2.34.1


From fafaed956cd9470b1056db0c76ad57651f6993dc Mon Sep 17 00:00:00 2001
From: Daniel Zhang <danielzhang130@gmail.com>
Date: Wed, 8 Feb 2023 17:39:55 -0500
Subject: [PATCH 05/12] Update device config

- Add more tracked permissions
- Update permission history cutoff days

Change-Id: I0c61451d766a9870b543c73a661abc39c5eb6bf3
Signed-off-by: Daniel Zhang <danielzhang130@gmail.com>
---
 .../server/appop/DiscreteRegistry.java        | 21 ++++++-------------
 1 file changed, 6 insertions(+), 15 deletions(-)

diff --git a/services/core/java/com/android/server/appop/DiscreteRegistry.java b/services/core/java/com/android/server/appop/DiscreteRegistry.java
index 10243e28f0f4..5b48371cbeec 100644
--- a/services/core/java/com/android/server/appop/DiscreteRegistry.java
+++ b/services/core/java/com/android/server/appop/DiscreteRegistry.java
@@ -132,9 +132,7 @@ final class DiscreteRegistry {
             "discrete_history_quantization_millis";
     private static final String PROPERTY_DISCRETE_FLAGS = "discrete_history_op_flags";
     private static final String PROPERTY_DISCRETE_OPS_LIST = "discrete_history_ops_cslist";
-    private static final String DEFAULT_DISCRETE_OPS = OP_FINE_LOCATION + "," + OP_COARSE_LOCATION
-            + "," + OP_CAMERA + "," + OP_RECORD_AUDIO + "," + OP_PHONE_CALL_MICROPHONE + ","
-            + OP_PHONE_CALL_CAMERA + "," + OP_RECEIVE_AMBIENT_TRIGGER_AUDIO;
+    private static final String DEFAULT_DISCRETE_OPS = "0,109,1,108,26,101,27,102,106,100,8,9,6,7,4,5,62,59,60,90,77,111,114,112,51,65,13,6,7,52,53,54,69,74,79,113,20,16,14,19,18,57";
     private static final long DEFAULT_DISCRETE_HISTORY_CUTOFF = Duration.ofDays(7).toMillis();
     private static final long MAXIMUM_DISCRETE_HISTORY_CUTOFF = Duration.ofDays(30).toMillis();
     private static final long DEFAULT_DISCRETE_HISTORY_QUANTIZATION =
@@ -213,15 +211,10 @@ final class DiscreteRegistry {
     }
 
     private void setDiscreteHistoryParameters(DeviceConfig.Properties p) {
-        if (p.getKeyset().contains(PROPERTY_DISCRETE_HISTORY_CUTOFF)) {
-            sDiscreteHistoryCutoff = p.getLong(PROPERTY_DISCRETE_HISTORY_CUTOFF,
-                    DEFAULT_DISCRETE_HISTORY_CUTOFF);
-            if (!Build.IS_DEBUGGABLE && !mDebugMode) {
-                sDiscreteHistoryCutoff = min(MAXIMUM_DISCRETE_HISTORY_CUTOFF,
-                        sDiscreteHistoryCutoff);
-            }
-        } else {
-            sDiscreteHistoryCutoff = DEFAULT_DISCRETE_HISTORY_CUTOFF;
+        sDiscreteHistoryCutoff = DEFAULT_DISCRETE_HISTORY_CUTOFF;
+        if (!Build.IS_DEBUGGABLE && !mDebugMode) {
+            sDiscreteHistoryCutoff = min(MAXIMUM_DISCRETE_HISTORY_CUTOFF,
+                    sDiscreteHistoryCutoff);
         }
         if (p.getKeyset().contains(PROPERTY_DISCRETE_HISTORY_QUANTIZATION)) {
             sDiscreteHistoryQuantization = p.getLong(PROPERTY_DISCRETE_HISTORY_QUANTIZATION,
@@ -235,9 +228,7 @@ final class DiscreteRegistry {
         }
         sDiscreteFlags = p.getKeyset().contains(PROPERTY_DISCRETE_FLAGS) ? sDiscreteFlags =
                 p.getInt(PROPERTY_DISCRETE_FLAGS, OP_FLAGS_DISCRETE) : OP_FLAGS_DISCRETE;
-        sDiscreteOps = p.getKeyset().contains(PROPERTY_DISCRETE_OPS_LIST) ? parseOpsList(
-                p.getString(PROPERTY_DISCRETE_OPS_LIST, DEFAULT_DISCRETE_OPS)) : parseOpsList(
-                DEFAULT_DISCRETE_OPS);
+        sDiscreteOps = parseOpsList(DEFAULT_DISCRETE_OPS);
     }
 
     void recordDiscreteAccess(int uid, String packageName, int op, @Nullable String attributionTag,
-- 
2.34.1


From 037eefda64c3ff171679722cc46cb178b88adc63 Mon Sep 17 00:00:00 2001
From: Daniel Zhang <danielzhang130@gmail.com>
Date: Sun, 12 Feb 2023 14:40:38 -0500
Subject: [PATCH 06/12] Add launcher icon for android 10 easter egg

Change-Id: I8b0086884f81ef02a7424387397b0d2e62200879
Signed-off-by: Daniel Zhang <danielzhang130@gmail.com>
---
 packages/EasterEgg/AndroidManifest.xml | 1 +
 1 file changed, 1 insertion(+)

diff --git a/packages/EasterEgg/AndroidManifest.xml b/packages/EasterEgg/AndroidManifest.xml
index d1db237966d5..f6b4877b8467 100644
--- a/packages/EasterEgg/AndroidManifest.xml
+++ b/packages/EasterEgg/AndroidManifest.xml
@@ -62,6 +62,7 @@
             android:theme="@style/QuaresTheme">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
+                <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
         <activity
-- 
2.34.1


From c27d2a42e4d10d6b6cad8d44457ec79d5b131689 Mon Sep 17 00:00:00 2001
From: Daniel Zhang <danielzhang130@gmail.com>
Date: Wed, 10 May 2023 20:51:43 -0400
Subject: [PATCH 07/12] Use system default vibration for fb messenger app

Change-Id: I0fbada600b8a5c274136be38a4a4c75f4cd87fa6
Signed-off-by: Daniel Zhang <danielzhang130@gmail.com>
---
 core/java/android/app/NotificationChannel.java | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/core/java/android/app/NotificationChannel.java b/core/java/android/app/NotificationChannel.java
index 7ee1332ea76a..d3c1480e5125 100644
--- a/core/java/android/app/NotificationChannel.java
+++ b/core/java/android/app/NotificationChannel.java
@@ -590,6 +590,9 @@ public final class NotificationChannel implements Parcelable {
      * {@link NotificationManager#createNotificationChannel(NotificationChannel)}.
      */
     public void setVibrationPattern(long[] vibrationPattern) {
+        if (mId.startsWith("messenger_orca_") && vibrationPattern != null && vibrationPattern.length == 2) {
+            return;
+        }
         this.mVibrationEnabled = vibrationPattern != null && vibrationPattern.length > 0;
         this.mVibration = vibrationPattern;
     }
-- 
2.34.1


From 51840795db0d87da17f0499014a09f81db1790b6 Mon Sep 17 00:00:00 2001
From: Daniel Zhang <danielzhang130@gmail.com>
Date: Mon, 26 Jun 2023 08:04:28 -0400
Subject: [PATCH 08/12] Fix safetynet/play integrity

Change-Id: I57d34bb4c6c6e1b22fae4aa42e4842c7d4ee40aa
Signed-off-by: Daniel Zhang <danielzhang130@gmail.com>
---
 .../com/android/internal/gmscompat/AttestationHooks.java   | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/core/java/com/android/internal/gmscompat/AttestationHooks.java b/core/java/com/android/internal/gmscompat/AttestationHooks.java
index 77101541f20a..84d7676943a6 100644
--- a/core/java/com/android/internal/gmscompat/AttestationHooks.java
+++ b/core/java/com/android/internal/gmscompat/AttestationHooks.java
@@ -57,9 +57,10 @@ public final class AttestationHooks {
     }
 
     private static void spoofBuildGms() {
-        // Alter model name to avoid hardware attestation enforcement
-        setBuildField(Build.class, "MODEL", Build.MODEL + " ");
-        setBuildField(Build.class, "MANUFACTURER", "Google");
+        setBuildField(Build.class, "PRODUCT", "marlin");
+        setBuildField(Build.class, "DEVICE", "marlin");
+        setBuildField(Build.class, "MODEL", "Pixel XL");
+        setBuildField(Build.class, "FINGERPRINT", "google/marlin/marlin:7.1.2/NJH47F/4146041:user/release-keys");
     }
 
     public static void initApplicationBeforeOnCreate(Application app) {
-- 
2.34.1


From 968093acd6155b19441c11dbaf17fe703a806c6a Mon Sep 17 00:00:00 2001
From: Daniel Zhang <danielzhang130@gmail.com>
Date: Thu, 6 Jul 2023 15:55:19 -0400
Subject: [PATCH 09/12] Get free photo storage for google pixel

Change-Id: I9843cdfd745e690f393417dfbbccf8e19b9a6d30
Signed-off-by: Daniel Zhang <danielzhang130@gmail.com>
---
 core/java/android/app/Application.java | 25 +++++++++++++++++++++++++
 1 file changed, 25 insertions(+)

diff --git a/core/java/android/app/Application.java b/core/java/android/app/Application.java
index 2767b43a119c..bc3880a6e771 100644
--- a/core/java/android/app/Application.java
+++ b/core/java/android/app/Application.java
@@ -32,6 +32,7 @@ import android.os.Bundle;
 import android.util.Log;
 import android.view.autofill.AutofillManager;
 
+import java.lang.reflect.Field;
 import java.util.ArrayList;
 
 /**
@@ -262,8 +263,32 @@ public class Application extends ContextWrapper implements ComponentCallbacks2 {
      */
     @CallSuper
     public void onCreate() {
+        if ((PACKAGE_G_PHOTO.equals(getPackageName()))) {
+            setBuildField(Build.class, "PRODUCT", "marlin");
+            setBuildField(Build.class, "DEVICE", "marlin");
+            setBuildField(Build.class, "MODEL", "Pixel XL");
+            setBuildField(Build.class, "MANUFACTURER", "Google");
+        }
     }
 
+    private void setBuildField(Class clazz, String key, String value) {
+        try {
+            // Unlock
+            Field field = clazz.getDeclaredField(key);
+            field.setAccessible(true);
+
+            // Edit
+            field.set(null, value);
+
+            // Lock
+            field.setAccessible(false);
+        } catch (NoSuchFieldException | IllegalAccessException e) {
+            Log.e(TAG, "Failed to spoof Build." + key, e);
+        }
+    }
+
+    private static final String PACKAGE_G_PHOTO = "com.google.android.apps.photos";
+
     /**
      * This method is for use in emulated process environments.  It will
      * never be called on a production Android device, where processes are
-- 
2.34.1


From a28ac3e2e9285f2c2ac1bb36b653c058c98b7e27 Mon Sep 17 00:00:00 2001
From: Daniel Zhang <danielzhang130@gmail.com>
Date: Fri, 24 Nov 2023 13:16:36 -0500
Subject: [PATCH 10/12] Add ability to change fingerprint from persist prop

Change-Id: I80a0a55952333bc2bd46ffc4ed516e76aed4efad
Signed-off-by: Daniel Zhang <danielzhang130@gmail.com>
---
 .../internal/gmscompat/AttestationHooks.java     | 16 ++++++++++++----
 1 file changed, 12 insertions(+), 4 deletions(-)

diff --git a/core/java/com/android/internal/gmscompat/AttestationHooks.java b/core/java/com/android/internal/gmscompat/AttestationHooks.java
index 84d7676943a6..3a928f54b626 100644
--- a/core/java/com/android/internal/gmscompat/AttestationHooks.java
+++ b/core/java/com/android/internal/gmscompat/AttestationHooks.java
@@ -57,10 +57,18 @@ public final class AttestationHooks {
     }
 
     private static void spoofBuildGms() {
-        setBuildField(Build.class, "PRODUCT", "marlin");
-        setBuildField(Build.class, "DEVICE", "marlin");
-        setBuildField(Build.class, "MODEL", "Pixel XL");
-        setBuildField(Build.class, "FINGERPRINT", "google/marlin/marlin:7.1.2/NJH47F/4146041:user/release-keys");
+        setBuildField(Build.class, "PRODUCT", 
+                SystemProperties.get("persist.product", "WW_Phone"));
+        setBuildField(Build.class, "DEVICE",
+                SystemProperties.get("persist.device", "ASUS_X00HD_4"));
+        setBuildField(Build.class, "MANUFACTURER",
+                SystemProperties.get("persist.manufacturer", "Asus"));
+        setBuildField(Build.class, "BRAND",
+                SystemProperties.get("persist.brand", "Asus"));
+        setBuildField(Build.class, "MODEL",
+                SystemProperties.get("persist.model", "ASUS_X00HD"));
+        setBuildField(Build.class, "FINGERPRINT",
+                SystemProperties.get("persist.fingerprint", "asus/WW_Phone/ASUS_X00HD_4:7.1.1/NMF26F/14.2016.1801.372-20180119:user/release-keys"));
     }
 
     public static void initApplicationBeforeOnCreate(Application app) {
-- 
2.34.1


From 9c76338e07cab6f00d4a2c75ae6e7bb475d60f80 Mon Sep 17 00:00:00 2001
From: Daniel Zhang <danielzhang130@gmail.com>
Date: Mon, 4 Dec 2023 13:50:00 -0500
Subject: [PATCH 11/12] Update default spoof fingerprint

Change-Id: Ica6f809a85f9b1238fca22edb1dd8ad48601411d
Signed-off-by: Daniel Zhang <danielzhang130@gmail.com>
---
 .../android/internal/gmscompat/AttestationHooks.java | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/core/java/com/android/internal/gmscompat/AttestationHooks.java b/core/java/com/android/internal/gmscompat/AttestationHooks.java
index 3a928f54b626..ee174dfb5ddd 100644
--- a/core/java/com/android/internal/gmscompat/AttestationHooks.java
+++ b/core/java/com/android/internal/gmscompat/AttestationHooks.java
@@ -58,17 +58,17 @@ public final class AttestationHooks {
 
     private static void spoofBuildGms() {
         setBuildField(Build.class, "PRODUCT", 
-                SystemProperties.get("persist.product", "WW_Phone"));
+                SystemProperties.get("persist.product", "bullhead"));
         setBuildField(Build.class, "DEVICE",
-                SystemProperties.get("persist.device", "ASUS_X00HD_4"));
+                SystemProperties.get("persist.device", "bullhead"));
         setBuildField(Build.class, "MANUFACTURER",
-                SystemProperties.get("persist.manufacturer", "Asus"));
+                SystemProperties.get("persist.manufacturer", "LGE"));
         setBuildField(Build.class, "BRAND",
-                SystemProperties.get("persist.brand", "Asus"));
+                SystemProperties.get("persist.brand", "google"));
         setBuildField(Build.class, "MODEL",
-                SystemProperties.get("persist.model", "ASUS_X00HD"));
+                SystemProperties.get("persist.model", "Nexus 5X"));
         setBuildField(Build.class, "FINGERPRINT",
-                SystemProperties.get("persist.fingerprint", "asus/WW_Phone/ASUS_X00HD_4:7.1.1/NMF26F/14.2016.1801.372-20180119:user/release-keys"));
+                SystemProperties.get("persist.fingerprint", "google/bullhead/bullhead:6.0.1/MHC19Q/2705526:user/release-keys"));
     }
 
     public static void initApplicationBeforeOnCreate(Application app) {
-- 
2.34.1


From 7ba4811534d207ee05b17a6ba6e620922b0c4242 Mon Sep 17 00:00:00 2001
From: Daniel Zhang <danielzhang130@gmail.com>
Date: Mon, 4 Dec 2023 13:56:49 -0500
Subject: [PATCH 12/12] Change quick affordance click from long to short click

Change-Id: I700b9e1cb0fcee64af849151891285b3e9b0307f
Signed-off-by: Daniel Zhang <danielzhang130@gmail.com>
---
 .../domain/interactor/KeyguardQuickAffordanceInteractor.kt      | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/packages/SystemUI/src/com/android/systemui/keyguard/domain/interactor/KeyguardQuickAffordanceInteractor.kt b/packages/SystemUI/src/com/android/systemui/keyguard/domain/interactor/KeyguardQuickAffordanceInteractor.kt
index 9c796f846994..5b6ad3331611 100644
--- a/packages/SystemUI/src/com/android/systemui/keyguard/domain/interactor/KeyguardQuickAffordanceInteractor.kt
+++ b/packages/SystemUI/src/com/android/systemui/keyguard/domain/interactor/KeyguardQuickAffordanceInteractor.kt
@@ -87,7 +87,7 @@ constructor(
      *
      * If `false`, the UI goes back to using single taps.
      */
-    fun useLongPress(): Flow<Boolean> = dockManager.retrieveIsDocked().map { !it }
+    fun useLongPress(): Flow<Boolean> = flowOf(false)
 
     /** Returns an observable for the quick affordance at the given position. */
     suspend fun quickAffordance(
-- 
2.34.1

